"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9525],{1413:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":"unreleased","badge":true,"noIndex":false,"className":"docs-version-current","isLast":false,"docsSidebars":{"docs":[{"type":"category","label":"Quick Start","items":[{"type":"link","label":"Getting started with Infer","href":"/docs/next/getting-started","docId":"getting-started","unlisted":false},{"type":"link","label":"Hello, World!","href":"/docs/next/hello-world","docId":"hello-world","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"User Guide","items":[{"type":"link","label":"Infer workflow","href":"/docs/next/infer-workflow","docId":"infer-workflow","unlisted":false},{"type":"link","label":"Analyzing apps or projects","href":"/docs/next/analyzing-apps-or-projects","docId":"analyzing-apps-or-projects","unlisted":false},{"type":"link","label":"Recommended flow for CI","href":"/docs/next/steps-for-ci","docId":"steps-for-ci","unlisted":false},{"type":"link","label":"Suppression of Infer Issues","href":"/docs/next/suppressions","docId":"suppressions","unlisted":false},{"type":"category","label":"Infer Manuals","items":[{"type":"link","label":"infer","href":"/docs/next/man-infer","docId":"man-infer","unlisted":false},{"type":"link","label":"infer analyze","href":"/docs/next/man-infer-analyze","docId":"man-infer-analyze","unlisted":false},{"type":"link","label":"infer capture","href":"/docs/next/man-infer-capture","docId":"man-infer-capture","unlisted":false},{"type":"link","label":"infer compile","href":"/docs/next/man-infer-compile","docId":"man-infer-compile","unlisted":false},{"type":"link","label":"infer debug","href":"/docs/next/man-infer-debug","docId":"man-infer-debug","unlisted":false},{"type":"link","label":"infer explore","href":"/docs/next/man-infer-explore","docId":"man-infer-explore","unlisted":false},{"type":"link","label":"infer help","href":"/docs/next/man-infer-help","docId":"man-infer-help","unlisted":false},{"type":"link","label":"infer report","href":"/docs/next/man-infer-report","docId":"man-infer-report","unlisted":false},{"type":"link","label":"infer reportdiff","href":"/docs/next/man-infer-reportdiff","docId":"man-infer-reportdiff","unlisted":false},{"type":"link","label":"infer run","href":"/docs/next/man-infer-run","docId":"man-infer-run","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Analyses and Issue Types","items":[{"type":"link","label":"List of all checkers","href":"/docs/next/all-checkers","docId":"all-checkers","unlisted":false},{"type":"link","label":"List of all categories of issue types","href":"/docs/next/all-categories","docId":"all-categories","unlisted":false},{"type":"link","label":"List of all issue types","href":"/docs/next/all-issue-types","docId":"all-issue-types","unlisted":false},{"type":"link","label":"Annotation Reachability","href":"/docs/next/checker-annotation-reachability","docId":"checker-annotation-reachability","unlisted":false},{"type":"link","label":"Buffer Overrun Analysis (InferBO)","href":"/docs/next/checker-bufferoverrun","docId":"checker-bufferoverrun","unlisted":false},{"type":"link","label":"Config Impact Analysis","href":"/docs/next/checker-config-impact-analysis","docId":"checker-config-impact-analysis","unlisted":false},{"type":"link","label":"Cost: Complexity Analysis","href":"/docs/next/checker-cost","docId":"checker-cost","unlisted":false},{"type":"link","label":"Static Constructor Stall Checker","href":"/docs/next/checker-static-constructor-stall-checker","docId":"checker-static-constructor-stall-checker","unlisted":false},{"type":"link","label":"Fragment Retains View","href":"/docs/next/checker-fragment-retains-view","docId":"checker-fragment-retains-view","unlisted":false},{"type":"link","label":"Impurity","href":"/docs/next/checker-impurity","docId":"checker-impurity","unlisted":false},{"type":"link","label":"Inefficient keySet Iterator","href":"/docs/next/checker-inefficient-keyset-iterator","docId":"checker-inefficient-keyset-iterator","unlisted":false},{"type":"link","label":"Lineage","href":"/docs/next/checker-lineage","docId":"checker-lineage","unlisted":false},{"type":"link","label":"Litho \\"Required Props\\"","href":"/docs/next/checker-litho-required-props","docId":"checker-litho-required-props","unlisted":false},{"type":"link","label":"Liveness","href":"/docs/next/checker-liveness","docId":"checker-liveness","unlisted":false},{"type":"link","label":"Loop Hoisting","href":"/docs/next/checker-loop-hoisting","docId":"checker-loop-hoisting","unlisted":false},{"type":"link","label":"Parameter Not Null Checked","href":"/docs/next/checker-parameter-not-null-checked","docId":"checker-parameter-not-null-checked","unlisted":false},{"type":"link","label":"Pulse","href":"/docs/next/checker-pulse","docId":"checker-pulse","unlisted":false},{"type":"link","label":"Purity","href":"/docs/next/checker-purity","docId":"checker-purity","unlisted":false},{"type":"link","label":"RacerD","href":"/docs/next/checker-racerd","docId":"checker-racerd","unlisted":false},{"type":"link","label":"Resource Leak Lab Exercise","href":"/docs/next/checker-resource-leak-lab","docId":"checker-resource-leak-lab","unlisted":false},{"type":"link","label":"SIL validation","href":"/docs/next/checker-sil-validation","docId":"checker-sil-validation","unlisted":false},{"type":"link","label":"Static Initialization Order Fiasco","href":"/docs/next/checker-siof","docId":"checker-siof","unlisted":false},{"type":"link","label":"Scope Leakage","href":"/docs/next/checker-scope-leakage","docId":"checker-scope-leakage","unlisted":false},{"type":"link","label":"Self in Block","href":"/docs/next/checker-self-in-block","docId":"checker-self-in-block","unlisted":false},{"type":"link","label":"Starvation","href":"/docs/next/checker-starvation","docId":"checker-starvation","unlisted":false},{"type":"link","label":"Topl","href":"/docs/next/checker-topl","docId":"checker-topl","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Foundations","items":[{"type":"link","label":"About Infer","href":"/docs/next/about-Infer","docId":"about-Infer","unlisted":false},{"type":"link","label":"Separation logic and bi-abduction","href":"/docs/next/separation-logic-and-bi-abduction","docId":"separation-logic-and-bi-abduction","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Contribute","items":[{"type":"link","label":"Building checkers with the Infer.AI framework","href":"/docs/next/absint-framework","docId":"absint-framework","unlisted":false},{"type":"link","label":"Infer Internal OCaml Modules API","href":"/docs/next/internal-API","docId":"internal-API","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Versions","items":[{"type":"link","label":"Documentation Versions","href":"/docs/next/versions","docId":"versions","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"about-Infer":{"id":"about-Infer","title":"About Infer","description":"Infer is a static program analyzer for Java, C, C++, Objective-C, and","sidebar":"docs"},"absint-framework":{"id":"absint-framework","title":"Building checkers with the Infer.AI framework","description":"Infer.AI is a framework for quickly developing abstract interpretation-based","sidebar":"docs"},"all-categories":{"id":"all-categories","title":"List of all categories of issue types","description":"Here are all the categories that issue types might belong to in Infer. Some issue types have no associated category at the moment. This usually indicates that the issue type is not yet mature enough to be used.","sidebar":"docs"},"all-checkers":{"id":"all-checkers","title":"List of all checkers","description":"Here is an overview of the checkers currently available in Infer.","sidebar":"docs"},"all-issue-types":{"id":"all-issue-types","title":"List of all issue types","description":"Here is an overview of the issue types currently reported by Infer.","sidebar":"docs"},"analyzing-apps-or-projects":{"id":"analyzing-apps-or-projects","title":"Analyzing apps or projects","description":"To analyze files with Infer you can use the compilers javac and clang. You","sidebar":"docs"},"checker-annotation-reachability":{"id":"checker-annotation-reachability","title":"Annotation Reachability","description":"Given pairs of source and sink annotations, e.g. `@A` and `@B`, this checker will warn whenever some method annotated with `@A` calls, directly or indirectly, another method annotated with `@B`. Besides the custom pairs, it is also possible to enable some built-in checks, such as `@PerformanceCritical` reaching `@Expensive` or `@NoAllocation` reaching `new`. It is also possible to model methods as if they were annotated, using regular expressions. This should also work in languages where there are no annotations. See flags starting with `--annotation-reachability`.","sidebar":"docs"},"checker-bufferoverrun":{"id":"checker-bufferoverrun","title":"Buffer Overrun Analysis (InferBO)","description":"InferBO is a detector for out-of-bounds array accesses.","sidebar":"docs"},"checker-config-impact-analysis":{"id":"checker-config-impact-analysis","title":"Config Impact Analysis","description":"[EXPERIMENTAL] Collects function that are called without config checks.","sidebar":"docs"},"checker-cost":{"id":"checker-cost","title":"Cost: Complexity Analysis","description":"Computes the asymptotic complexity of functions with respect to execution cost or other user defined resources. Can be used to detect changes in the complexity with `infer reportdiff`.","sidebar":"docs"},"checker-fragment-retains-view":{"id":"checker-fragment-retains-view","title":"Fragment Retains View","description":"Detects when Android fragments are not explicitly nullified before becoming unreachable.","sidebar":"docs"},"checker-impurity":{"id":"checker-impurity","title":"Impurity","description":"Detects functions with potential side-effects. Same as \\"purity\\", but implemented on top of Pulse.","sidebar":"docs"},"checker-inefficient-keyset-iterator":{"id":"checker-inefficient-keyset-iterator","title":"Inefficient keySet Iterator","description":"Check for inefficient uses of iterators that iterate on keys then lookup their values, instead of iterating on key-value pairs directly.","sidebar":"docs"},"checker-lineage":{"id":"checker-lineage","title":"Lineage","description":"Computes a dataflow graph","sidebar":"docs"},"checker-litho-required-props":{"id":"checker-litho-required-props","title":"Litho \\"Required Props\\"","description":"Checks that all non-optional `@Prop`s have been specified when constructing Litho components.","sidebar":"docs"},"checker-liveness":{"id":"checker-liveness","title":"Liveness","description":"Detection of dead stores and unused variables.","sidebar":"docs"},"checker-loop-hoisting":{"id":"checker-loop-hoisting","title":"Loop Hoisting","description":"Detect opportunities to hoist function calls that are invariant outside of loop bodies for efficiency.","sidebar":"docs"},"checker-parameter-not-null-checked":{"id":"checker-parameter-not-null-checked","title":"Parameter Not Null Checked","description":"An Objective-C-specific analysis to detect when a block parameter is used before being checked for null first.","sidebar":"docs"},"checker-pulse":{"id":"checker-pulse","title":"Pulse","description":"General-purpose memory and value analysis engine.","sidebar":"docs"},"checker-purity":{"id":"checker-purity","title":"Purity","description":"Detects pure (side-effect-free) functions. A different implementation of \\"impurity\\".","sidebar":"docs"},"checker-racerd":{"id":"checker-racerd","title":"RacerD","description":"Thread safety analysis.","sidebar":"docs"},"checker-resource-leak-lab":{"id":"checker-resource-leak-lab","title":"Resource Leak Lab Exercise","description":"Toy checker for the \\"resource leak\\" write-your-own-checker exercise.","sidebar":"docs"},"checker-scope-leakage":{"id":"checker-scope-leakage","title":"Scope Leakage","description":"The Java/Kotlin checker takes into account a set of \\"scope\\" annotations and a must-not-hold relation over the scopes. The checker raises an alarm if there exists a field access path from object A to object B, with respective scopes SA and SB, such that must-not-hold(SA, SB).","sidebar":"docs"},"checker-self-in-block":{"id":"checker-self-in-block","title":"Self in Block","description":"An Objective-C-specific analysis to detect when a block captures `self`.","sidebar":"docs"},"checker-sil-validation":{"id":"checker-sil-validation","title":"SIL validation","description":"This checker validates that all SIL instructions in all procedure bodies conform to a (front-end specific) subset of SIL.","sidebar":"docs"},"checker-siof":{"id":"checker-siof","title":"Static Initialization Order Fiasco","description":"Catches Static Initialization Order Fiascos in C++, that can lead to subtle, compiler-version-dependent errors.","sidebar":"docs"},"checker-starvation":{"id":"checker-starvation","title":"Starvation","description":"Detect various kinds of situations when no progress is being made because of concurrency errors.","sidebar":"docs"},"checker-static-constructor-stall-checker":{"id":"checker-static-constructor-stall-checker","title":"Static Constructor Stall Checker","description":"Detect if dispatch_once is called from a static constructor.","sidebar":"docs"},"checker-topl":{"id":"checker-topl","title":"Topl","description":"Detect errors based on user-provided state machines describing temporal properties over multiple objects.","sidebar":"docs"},"getting-started":{"id":"getting-started","title":"Getting started with Infer","description":"Get Infer","sidebar":"docs"},"hello-world":{"id":"hello-world","title":"Hello, World!","description":"Follow the instructions in this page to try Infer on a few small examples. You","sidebar":"docs"},"infer-workflow":{"id":"infer-workflow","title":"Infer workflow","description":"This page documents several ways of running Infer, that you can adapt to your","sidebar":"docs"},"internal-API":{"id":"internal-API","title":"Infer Internal OCaml Modules API","description":"Browse the generated documentation for Infer\'s OCaml code here.","sidebar":"docs"},"man-infer":{"id":"man-infer","title":"infer","description":"","sidebar":"docs"},"man-infer-analyze":{"id":"man-infer-analyze","title":"infer analyze","description":"","sidebar":"docs"},"man-infer-capture":{"id":"man-infer-capture","title":"infer capture","description":"","sidebar":"docs"},"man-infer-compile":{"id":"man-infer-compile","title":"infer compile","description":"","sidebar":"docs"},"man-infer-debug":{"id":"man-infer-debug","title":"infer debug","description":"","sidebar":"docs"},"man-infer-explore":{"id":"man-infer-explore","title":"infer explore","description":"","sidebar":"docs"},"man-infer-help":{"id":"man-infer-help","title":"infer help","description":"","sidebar":"docs"},"man-infer-report":{"id":"man-infer-report","title":"infer report","description":"","sidebar":"docs"},"man-infer-reportdiff":{"id":"man-infer-reportdiff","title":"infer reportdiff","description":"","sidebar":"docs"},"man-infer-run":{"id":"man-infer-run","title":"infer run","description":"","sidebar":"docs"},"man-pages":{"id":"man-pages","title":"Infer Manuals","description":"Here are the man pages for all the infer commands:"},"separation-logic-and-bi-abduction":{"id":"separation-logic-and-bi-abduction","title":"Separation logic and bi-abduction","description":"- Separation logic","sidebar":"docs"},"steps-for-ci":{"id":"steps-for-ci","title":"Recommended flow for CI","description":"The recommended flow for CI integration is to determine the modified files, and","sidebar":"docs"},"support":{"id":"support","title":"Infer | Need help?","description":"Need help?"},"suppressions":{"id":"suppressions","title":"Suppression of Infer Issues","description":"Infer includes a language-agnostic method to suppress Infer issues in source files.","sidebar":"docs"},"versions":{"id":"versions","title":"Documentation Versions","description":"Browse the documentation for different versions:","sidebar":"docs"}}}}')}}]);