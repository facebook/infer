"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7211],{8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var r=n(6540);const s={},i=r.createContext(s);function c(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(i.Provider,{value:t},e.children)}},9138:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"checker-printf-args","title":"`printf()` Argument Types","description":"Detect mismatches between the Java `printf` format strings and the argument types For example, this checker will warn about the type error in `printf(\\"Hello %d\\", \\"world\\")`","source":"@site/versioned_docs/version-1.2.0/checker-printf-args.md","sourceDirName":".","slug":"/checker-printf-args","permalink":"/docs/checker-printf-args","draft":false,"unlisted":false,"tags":[],"version":"1.2.0","frontMatter":{"title":"`printf()` Argument Types","description":"Detect mismatches between the Java `printf` format strings and the argument types For example, this checker will warn about the type error in `printf(\\"Hello %d\\", \\"world\\")`"},"sidebar":"docs","previous":{"title":"Parameter Not Null Checked","permalink":"/docs/checker-parameter-not-null-checked"},"next":{"title":"Pulse","permalink":"/docs/checker-pulse"}}');var s=n(4848),i=n(8453);const c={title:"`printf()` Argument Types",description:'Detect mismatches between the Java `printf` format strings and the argument types For example, this checker will warn about the type error in `printf("Hello %d", "world")`'},o=void 0,l={},a=[{value:"List of Issue Types",id:"list-of-issue-types",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Detect mismatches between the Java ",(0,s.jsx)(t.code,{children:"printf"})," format strings and the argument types For example, this checker will warn about the type error in ",(0,s.jsx)(t.code,{children:'printf("Hello %d", "world")'})]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"***DEPRECATED***"})," Unmaintained."]}),"\n",(0,s.jsxs)(t.p,{children:["Activate with ",(0,s.jsx)(t.code,{children:"--printf-args"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Supported languages:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"C/C++/ObjC: No"}),"\n",(0,s.jsx)(t.li,{children:"C#/.Net: No"}),"\n",(0,s.jsx)(t.li,{children:"Erlang: No"}),"\n",(0,s.jsx)(t.li,{children:"Hack: No"}),"\n",(0,s.jsx)(t.li,{children:"Java: Yes"}),"\n",(0,s.jsx)(t.li,{children:"Python: No"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"list-of-issue-types",children:"List of Issue Types"}),"\n",(0,s.jsx)(t.p,{children:"The following issue types are reported by this checker:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/docs/all-issue-types#checkers_printf_args",children:"CHECKERS_PRINTF_ARGS"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);