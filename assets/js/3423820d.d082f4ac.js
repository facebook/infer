"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[741],{891:e=>{e.exports=JSON.parse('{"permalink":"/blog/2017/10/20/ocamlformat-released","source":"@site/blog/2017-10-20-ocamlformat-released.md","title":"OCamlFormat open-source released","description":"We are pleased to announce the first public release of OCamlFormat.","date":"2017-10-20T00:00:00.000Z","tags":[],"readingTime":0.86,"hasTruncateMarker":false,"authors":[{"name":"Josh Berdine","key":null,"page":null}],"frontMatter":{"title":"OCamlFormat open-source released","author":"Josh Berdine"},"unlisted":false,"nextItem":{"title":"Video of @Scale2016 talk. Getting the most out of static analyzers","permalink":"/blog/2016/11/28/atscale16"}}')},5139:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var o=n(891),a=n(4848),r=n(8453);const s={title:"OCamlFormat open-source released",author:"Josh Berdine"},i=void 0,l={authorsImageUrls:[void 0]},c=[];function m(e){const t={a:"a",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"We are pleased to announce the first public release of OCamlFormat."}),"\n",(0,a.jsxs)(t.p,{children:["OCamlFormat is a tool to automatically format ",(0,a.jsx)(t.a,{href:"https://ocaml.org/",children:"OCaml"})," code.\nIt follows the same basic design as refmt for\n",(0,a.jsx)(t.a,{href:"https://reasonml.github.io/",children:"Reason"})," code, but for OCaml. In particular, it\nworks by parsing source code using the OCaml compiler's standard parser,\ndeciding where to place comments in the parsetree, and printing the parsetree\nand comments in a uniform style."]}),"\n",(0,a.jsxs)(t.p,{children:["At Facebook, we currently use this for the OCaml code of\n",(0,a.jsx)(t.a,{href:"https://github.com/facebook/infer",children:"Infer"})," to enable developers to stop thinking\nabout line breaking, indentation, parenthesization, etc., to minimize stylistic\nnit-picking during code review, and to make it as visually obvious as possible\nwhen the parser's interpretation of code does not match the programmer's. We use\nthis both with integration with editors as well as a pre-commit hook."]}),"\n",(0,a.jsxs)(t.p,{children:["Development is taking place on\n",(0,a.jsx)(t.a,{href:"http://github.com/ocaml-ppx/ocamlformat",children:"github"}),". License is MIT."]}),"\n",(0,a.jsxs)(t.p,{children:["See the ",(0,a.jsx)(t.a,{href:"http://github.com/ocaml-ppx/ocamlformat",children:"github page"})," for more info on\ninstallation, documentation, contributing, etc."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var o=n(6540);const a={},r=o.createContext(a);function s(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);