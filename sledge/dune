; Copyright (c) Facebook, Inc. and its affiliates.
;
; This source code is licensed under the MIT license found in the
; LICENSE file in the root directory of this source tree.

(env
 (debug
  (flags
   (-strict-formats -strict-sequence -short-paths -bin-annot -keep-locs
     -keep-docs -g -w +a -w @unexpected-docstring -w -fragile-match -w
     -missing-record-field-pattern -w -not-principal -w
     -duplicate-definitions -w -name-out-of-scope -w -disambiguated-name -w
     -open-shadow-identifier -w -eliminated-optional-arguments -w
     -unused-open-bang -w -missing-mli))
  (ocamlopt_flags (-O3))
  (env-vars
   (PPX_DBG_ENABLED 1))
  (inline_tests enabled))
 (trace
  (flags
   (-w -a -noassert -unboxed-types -g))
  (ocamlopt_flags (-O3))
  (env-vars
   (PPX_DBG_ENABLED 1))
  (inline_tests disabled))
 (_ ; release, dev, default,...
  (flags
   (-w -a -noassert -unboxed-types))
  (ocamlopt_flags (-O3))
  (env-vars
   (PPX_DBG_ENABLED 0))
  (inline_tests disabled)))

(library
 (name ppx_sledge)
 (kind ppx_rewriter)
 (libraries ppx_compare ppx_enumerate ppx_expect ppx_here ppx_inline_test
   ppx_let ppx_sexp_conv ppx_sexp_value)
 (preprocess no_preprocessing))

(subdir
 src/llair
 (library
  (name llair)
  (public_name sledge.llair)
  (libraries nonstdlib fpath)
  (flags
   (:standard -open NS))
  (preprocess
   (pps ppx_sledge ppx_dbg))
  (inline_tests)))

(subdir
 src/fol
 (library
  (name fol)
  (public_name sledge.fol)
  (libraries nonstdlib llair)
  (flags
   (:standard -open NS))
  (preprocess
   (pps ppx_sledge ppx_dbg))
  (inline_tests)))

(subdir
 src
 (library
  (name sledge)
  (public_name sledge)
  (libraries mtime mtime.clock.os psq nonstdlib llair fol)
  (flags
   (:standard -open NS))
  (preprocess
   (pps ppx_sledge ppx_dbg))
  (inline_tests)))

(subdir
 report
 (executable
  (name sledge_report)
  (public_name sledge-report)
  (package sledge)
  (libraries sledge core_unix.command_unix)
  (flags
   (:standard -open NS -open Sledge))
  (preprocess
   (pps ppx_sledge ppx_dbg))))

(subdir
 src/test
 (library
  (name test)
  (libraries sledge)
  (flags
   (:standard -open NS))
  (preprocess
   (pps ppx_sledge ppx_dbg))
  (inline_tests)))

(subdir
 cli
 (executable
  (name sledge_cli)
  (public_name sledge)
  (package sledge)
  (libraries apron apron.boxMPQ core_unix.command_unix ctypes ctypes.foreign
    dbg dune-build-info llvm llvm.analysis llvm.bitwriter llvm.ipo
    llvm.irreader llvm.linker llvm.passmgr_builder llvm.scalar_opts
    llvm.target memtrace shexp.process yojson nonstdlib sledge smtlib-utils)
  (flags
   (:standard -w -no-cmx-file -open NS -open Sledge))
  (preprocess
   (pps ppx_sledge ppx_dbg))))

(dirs :standard \ test)

(vendored_dirs vendor)

(rule
 (targets sledge-help.txt)
 (deps
  tools/gen_help.sh
  cli/sledge_cli.exe
  (env_var SLEDGE_CONFIG))
 (action
  (with-stdout-to
   sledge-help.txt
   (run tools/gen_help.sh)))
 (mode promote))
