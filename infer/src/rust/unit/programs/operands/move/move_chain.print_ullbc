# Final ULLBC before control-flow reconstruction:

// Full name: alloc::string::String
#[lang_item("String")]
pub opaque type String

// Full name: core::convert::From
#[lang_item("From")]
pub trait From<Self, T>
{
    parent_clause0 : [@TraitClause0]: Sized<Self>
    parent_clause1 : [@TraitClause1]: Sized<T>
    fn from = core::convert::From::from<Self, T>[Self]
    non-dyn-compatible
}

// Full name: core::ops::drop::Drop
#[lang_item("drop")]
pub trait Drop<Self>
{
    parent_clause0 : [@TraitClause0]: MetaSized<Self>
    fn drop<'_0> = core::ops::drop::Drop::drop<'_0_0, Self>[Self]
    vtable: core::ops::drop::Drop::{vtable}
}

// Full name: core::marker::Sized
#[lang_item("sized")]
pub trait Sized<Self>
{
    parent_clause0 : [@TraitClause0]: MetaSized<Self>
    non-dyn-compatible
}

// Full name: core::marker::MetaSized
#[lang_item("meta_sized")]
pub trait MetaSized<Self>

// Full name: alloc::string::{impl From<&'_0 (Str)> for String}
impl<'_0> From<&'_0 (Str)> for String {
    parent_clause0 = Sized<String>
    parent_clause1 = Sized<&'_ (Str)>
    fn from = {impl From<&'_0 (Str)> for String}::from<'_0>
    non-dyn-compatible
}

// Full name: alloc::string::String::{impl Drop for String}
impl Drop for String {
    parent_clause0 = MetaSized<String>
    fn drop<'_0> = {impl Drop for String}::drop<'_0_0>
    non-dyn-compatible
}

// Full name: move_chain::main
fn main()
{
    let @0: (); // return
    let a@1: String; // local
    let b@2: String; // local
    let c@3: String; // local
    let @4: (); // anonymous local

    bb0: {
        storage_live(a@1);
        a@1 := {impl From<&'_0 (Str)> for String}::from<'_>(const ("hello")) -> bb1 (unwind: bb2);
    }

    bb1: {
        storage_live(b@2);
        b@2 := move (a@1);
        storage_live(c@3);
        c@3 := move (b@2);
        nop;
        @0 := ();
        drop[{impl Drop for String}] c@3;
        storage_dead(c@3);
        drop[{impl Drop for String}] b@2;
        storage_dead(b@2);
        drop[{impl Drop for String}] a@1;
        storage_dead(a@1);
        @0 := ();
        return;
    }

    bb2: {
        unwind_continue;
    }
}

#[lang_item("from_fn")]
pub fn core::convert::From::from<Self, T>(@1: T) -> Self
where
    [@TraitClause0]: From<Self, T>,

pub fn core::ops::drop::Drop::drop<'_0, Self>(@1: &'_0 mut (Self))
where
    [@TraitClause0]: Drop<Self>,

// Full name: alloc::string::{impl From<&'_0 (Str)> for String}::from
pub fn {impl From<&'_0 (Str)> for String}::from<'_0>(@1: &'_0 (Str)) -> String

// Full name: alloc::string::String::{impl Drop for String}::drop
fn {impl Drop for String}::drop<'_0>(@1: &'_0 mut (String))