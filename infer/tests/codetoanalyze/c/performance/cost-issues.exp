codetoanalyze/c/performance/break.c, break_constant_FP, 6 + 5 ⋅ p + 2 ⋅ (1+max(0, p)),  OnUIThread:false, [{1+max(0, p)},Call to break_loop,Loop,{p},Call to break_loop,Loop]
codetoanalyze/c/performance/break.c, break_loop, 4 + 5 ⋅ p + 2 ⋅ (1+max(0, p)),  OnUIThread:false, [{1+max(0, p)},Loop,{p},Loop]
codetoanalyze/c/performance/break.c, break_loop_with_t, 6 + 5 ⋅ p + 2 ⋅ (1+max(0, p)),  OnUIThread:false, [{1+max(0, p)},Loop,{p},Loop]
codetoanalyze/c/performance/compound_loop_guard.c, compound_while, 6 + 3 ⋅ m + 4 ⋅ (1+max(0, m)),  OnUIThread:false, [{1+max(0, m)},Loop,{m},Loop]
codetoanalyze/c/performance/compound_loop_guard.c, nested_while_and_or_constant, 19,  OnUIThread:false, []
codetoanalyze/c/performance/compound_loop_guard.c, simplified_simulated_while_with_and_constant, 604,  OnUIThread:false, []
codetoanalyze/c/performance/compound_loop_guard.c, simulated_nested_loop_with_and_constant, 3528,  OnUIThread:false, []
codetoanalyze/c/performance/compound_loop_guard.c, simulated_while_shortcut_constant, 8,  OnUIThread:false, []
codetoanalyze/c/performance/compound_loop_guard.c, simulated_while_with_and_linear, 5 + 3 ⋅ p + 4 ⋅ (1+max(0, p)),  OnUIThread:false, [{1+max(0, p)},Loop,{p},Loop]
codetoanalyze/c/performance/compound_loop_guard.c, while_and_or, ⊤,  OnUIThread:false, [Unbounded loop,Loop]
codetoanalyze/c/performance/cost_test.c, always, 6,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, call_infinite, ⊤,  OnUIThread:false, [Call to infinite,Unbounded loop,Loop]
codetoanalyze/c/performance/cost_test.c, call_while_upto20_10_constant, 54,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, call_while_upto20_minus100_constant, 604,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, call_while_upto20_unsigned, 4 + 4 ⋅ (-x + 20) + (21-min(20, x)),  OnUIThread:false, [{21-min(20, x)},Call to while_upto20,Loop,{-x + 20},Call to while_upto20,Loop]
codetoanalyze/c/performance/cost_test.c, cond_constant, 12,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, div_const, 2,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, foo_constant, 5,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, infinite, ⊤,  OnUIThread:false, [Unbounded loop,Loop]
codetoanalyze/c/performance/cost_test.c, infinite_FN, 15,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, iter_div_const_constant, 107,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, loop0_constant, 904,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, loop1_constant, 1006,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, loop2_linear, 3 + 4 ⋅ k + 2 ⋅ (1+max(0, k)),  OnUIThread:false, [{1+max(0, k)},Loop,{k},Loop]
codetoanalyze/c/performance/cost_test.c, loop3_constant, 96,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, loop_character_symbols_linear, 4 + 4 ⋅ (122-min(97, c)),  OnUIThread:false, [{122-min(97, c)},Loop]
codetoanalyze/c/performance/cost_test.c, unit_cost_function, 0,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test.c, while_upto20, 3 + 4 ⋅ (-m + 20) + (21-min(20, m)),  OnUIThread:false, [{21-min(20, m)},Loop,{-m + 20},Loop]
codetoanalyze/c/performance/cost_test_deps.c, foo, 3,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, if_bad_constant, 74,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, if_bad_loop_constant, 202,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, loop_despite_inferbo_constant, 1207,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, loop_no_dep1, 608,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, loop_no_dep2, 612,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, nested_loop_constant, 2546,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, real_while_constant, 217,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, simulated_nested_loop_cond_in_goto_constant, 3533,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, simulated_nested_loop_constant, 2528,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, simulated_nested_loop_more_expensive_constant, 2533,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, simulated_while_constant, 217,  OnUIThread:false, []
codetoanalyze/c/performance/cost_test_deps.c, two_loops, 548,  OnUIThread:false, []
codetoanalyze/c/performance/exit.c, call_exit_unreachable, ⊥,  OnUIThread:false, [Unreachable node]
codetoanalyze/c/performance/exit.c, call_unreachable_constant, 1,  OnUIThread:false, []
codetoanalyze/c/performance/exit.c, compute_exit_unreachable, ⊥,  OnUIThread:false, [Unreachable node]
codetoanalyze/c/performance/exit.c, exit_unreachable, ⊥,  OnUIThread:false, [Unreachable node]
codetoanalyze/c/performance/exit.c, inline_exit_unreachable_FP, 3 ⋅ p + 2 ⋅ (1+max(0, p)),  OnUIThread:false, [{1+max(0, p)},Loop,{p},Loop]
codetoanalyze/c/performance/exit.c, linear, 2 + 3 ⋅ p + 2 ⋅ (1+max(0, p)),  OnUIThread:false, [{1+max(0, p)},Loop,{p},Loop]
codetoanalyze/c/performance/instantiate.c, do_2_times_constant, 16,  OnUIThread:false, []
codetoanalyze/c/performance/instantiate.c, do_half_m2_times_quadratic, 2 + 4 ⋅ (m - 1) × m + 6 ⋅ m + 2 ⋅ m × (max(1, m)) + 2 ⋅ (1+max(0, m)),  OnUIThread:false, [{1+max(0, m)},Loop,{max(1, m)},Call to do_n_times,Loop,{m},Loop,{m},Loop,{m - 1},Call to do_n_times,Loop]
codetoanalyze/c/performance/instantiate.c, do_m2_times_quadratic, 2 + 6 ⋅ m + 4 ⋅ m × m + 2 ⋅ m × (1+max(0, m)) + 2 ⋅ (1+max(0, m)),  OnUIThread:false, [{1+max(0, m)},Loop,{1+max(0, m)},Call to do_n_times,Loop,{m},Call to do_n_times,Loop,{m},Loop]
codetoanalyze/c/performance/instantiate.c, do_n_times, 2 + 4 ⋅ n + 2 ⋅ (1+max(0, n)),  OnUIThread:false, [{1+max(0, n)},Loop,{n},Loop]
codetoanalyze/c/performance/instantiate.c, no_op, 1,  OnUIThread:false, []
codetoanalyze/c/performance/invariant.c, do_n_m_times_nested, 6 + 5 ⋅ n + 3 ⋅ n × m + 2 ⋅ n × (1+max(0, m)) + 2 ⋅ (1+max(0, n)),  OnUIThread:false, [{1+max(0, n)},Loop,{1+max(0, m)},Loop,{m},Loop,{n},Loop]
codetoanalyze/c/performance/invariant.c, two_loops_nested_invariant, 5 + 23 ⋅ p + 2 ⋅ (1+max(0, p)),  OnUIThread:false, [{1+max(0, p)},Loop,{p},Loop]
codetoanalyze/c/performance/invariant.c, while_infinite_FN, 2,  OnUIThread:false, []
codetoanalyze/c/performance/invariant.c, while_unique_def_FN, 14,  OnUIThread:false, []
codetoanalyze/c/performance/jump_inside_loop.c, jump_inside_loop_constant_linear, 8 + (k - 1) + 4 ⋅ (max(1, k)),  OnUIThread:false, [{max(1, k)},Loop,{k - 1},Loop]
codetoanalyze/c/performance/jump_inside_loop.c, loop_always_linear, 6 + k + 2 ⋅ (max(1, k)) + 2 ⋅ (1+max(1, k)),  OnUIThread:false, [{1+max(1, k)},Loop,{max(1, k)},Loop,{k},Loop]
codetoanalyze/c/performance/loops.c, __infer_globals_initializer_array1, 3,  OnUIThread:false, []
codetoanalyze/c/performance/loops.c, __infer_globals_initializer_array2, 1,  OnUIThread:false, []
codetoanalyze/c/performance/loops.c, do_while_independent_of_p, 227,  OnUIThread:false, []
codetoanalyze/c/performance/loops.c, if_in_loop, 323,  OnUIThread:false, []
codetoanalyze/c/performance/loops.c, if_out_loop, 514,  OnUIThread:false, []
codetoanalyze/c/performance/loops.c, larger_state_FN, 1004,  OnUIThread:false, []
codetoanalyze/c/performance/loops.c, loop_use_global_vars, 3 + 4 ⋅ x + 2 ⋅ (1+max(0, x)),  OnUIThread:false, [{1+max(0, x)},Loop,{x},Loop]
codetoanalyze/c/performance/loops.c, ptr_cmp, 4 + 5 ⋅ size + 2 ⋅ (2+max(-1, size)),  OnUIThread:false, [{2+max(-1, size)},Loop,{size},Loop]
codetoanalyze/c/performance/purity.c, loop, 6006 + 1000 ⋅ |fun_ptr|,  OnUIThread:false, []
codetoanalyze/c/performance/switch_continue.c, test_switch_FN, 600,  OnUIThread:false, []
codetoanalyze/c/performance/switch_continue.c, unroll_loop, 15 + (n - 1) + 11 ⋅ (max(1, n)),  OnUIThread:false, [{max(1, n)},Loop,{n - 1},Loop]
codetoanalyze/c/performance/two_loops_symbolic.c, nop, 1,  OnUIThread:false, []
codetoanalyze/c/performance/two_loops_symbolic.c, two_loops_symb, 7 + 4 ⋅ m + 4 ⋅ m + 2 ⋅ (1+max(0, m)) + 2 ⋅ (1+max(0, m)),  OnUIThread:false, [{1+max(0, m)},Loop,{1+max(0, m)},Loop,{m},Loop,{m},Loop]
codetoanalyze/c/performance/two_loops_symbolic.c, two_loops_symb_diff, 7 + 4 ⋅ k + 4 ⋅ m + 2 ⋅ (1+max(0, k)) + 2 ⋅ (1+max(0, m)),  OnUIThread:false, [{1+max(0, m)},Loop,{1+max(0, k)},Loop,{m},Loop,{k},Loop]
