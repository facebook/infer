/* @generated */
digraph iCFG {
15 [label="15:  DeclStmt \n   *&x:int =1 [line 11]\n " shape="box"]
	

	 15 -> 14 ;
14 [label="14:  BinaryOperatorStmt: Assign \n   n$12=*&x:int  [line 14]\n  *&y:int =~n$12 [line 14]\n " shape="box"]
	

	 14 -> 13 ;
13 [label="13:  BinaryOperatorStmt: Assign \n   n$11=*&x:int  [line 15]\n  *&y:int =-n$11 [line 15]\n " shape="box"]
	

	 13 -> 12 ;
12 [label="12:  BinaryOperatorStmt: Assign \n   n$10=*&x:int  [line 16]\n  *&y:int =n$10 [line 16]\n " shape="box"]
	

	 12 -> 11 ;
11 [label="11:  BinaryOperatorStmt: Assign \n   n$9=*&x:int  [line 18]\n  *&x:int =(n$9 + 1) [line 18]\n  *&y:int =n$9 [line 18]\n " shape="box"]
	

	 11 -> 10 ;
10 [label="10:  BinaryOperatorStmt: Assign \n   n$8=*&x:int  [line 19]\n  *&x:int =(n$8 + 1) [line 19]\n  *&y:int =(n$8 + 1) [line 19]\n " shape="box"]
	

	 10 -> 9 ;
9 [label="9:  BinaryOperatorStmt: Assign \n   n$7=*&x:int  [line 21]\n  *&x:int =(n$7 - 1) [line 21]\n  *&y:int =(n$7 - 1) [line 21]\n " shape="box"]
	

	 9 -> 8 ;
8 [label="8:  BinaryOperatorStmt: Assign \n   n$6=*&x:int  [line 22]\n  *&x:int =(n$6 - 1) [line 22]\n  *&y:int =n$6 [line 22]\n " shape="box"]
	

	 8 -> 7 ;
7 [label="7:  BinaryOperatorStmt: Assign \n   *&b:int *=&a [line 27]\n " shape="box"]
	

	 7 -> 6 ;
6 [label="6:  BinaryOperatorStmt: Assign \n   n$4=*&b:int * [line 28]\n  n$5=*(n$4 + 1):int  [line 28]\n  *&a:int =n$5 [line 28]\n " shape="box"]
	

	 6 -> 5 ;
5 [label="5:  BinaryOperatorStmt: Assign \n   n$1=*&b:int * [line 29]\n  n$2=*&b:int * [line 29]\n  n$3=*n$2:int  [line 29]\n  *n$1:int =(n$3 + 1) [line 29]\n " shape="box"]
	

	 5 -> 4 ;
4 [label="4:  BinaryOperatorStmt: Assign \n   n$0=*&a:int  [line 30]\n  *&a:int =n$0 [line 30]\n " shape="box"]
	

	 4 -> 3 ;
3 [label="3:  Return Stmt \n   *&return:int =0 [line 32]\n " shape="box"]
	

	 3 -> 2 ;
2 [label="2: Exit main \n  " color=yellow style=filled]
	

1 [label="1: Start main\nFormals: \nLocals:  b:int * a:int  y:int  x:int  \n   DECLARE_LOCALS(&return,&b,&a,&y,&x); [line 10]\n " color=yellow style=filled]
	

	 1 -> 15 ;
}
