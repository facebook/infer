/* @generated */
digraph iCFG {
20 [label="20:  BinaryOperatorStmt: Assign \n   n$13=*&0$?%__sil_tmpSIL_temp_conditional___n$10:int * [line 12]\n  n$14=*n$13:int  [line 12]\n  *&x:int =n$14 [line 12]\n " shape="box"]
	

	 20 -> 10 ;
	 20 -> 11 ;
19 [label="19:  ConditinalStmt Branch \n   n$12=*&p:int * [line 12]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$10:int *=n$12 [line 12]\n " shape="box"]
	

	 19 -> 15 ;
18 [label="18:  ConditinalStmt Branch \n   n$11=*&p:int * [line 12]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$10:int *=n$11 [line 12]\n " shape="box"]
	

	 18 -> 15 ;
17 [label="17: Prune (false branch) \n   PRUNE((1 == 0), false); [line 12]\n " shape="invhouse"]
	

	 17 -> 19 ;
16 [label="16: Prune (true branch) \n   PRUNE((1 != 0), true); [line 12]\n " shape="invhouse"]
	

	 16 -> 18 ;
15 [label="15: + \n  " ]
	

	 15 -> 20 ;
14 [label="14:  DeclStmt \n   n$8=*&0$?%__sil_tmpSIL_temp_conditional___n$5:int * [line 14]\n  n$9=*n$8:int  [line 14]\n  *&y:int =n$9 [line 14]\n " shape="box"]
	

	 14 -> 4 ;
	 14 -> 5 ;
13 [label="13:  ConditinalStmt Branch \n   n$7=*&p:int * [line 14]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$5:int *=n$7 [line 14]\n " shape="box"]
	

	 13 -> 9 ;
12 [label="12:  ConditinalStmt Branch \n   n$6=*&p:int * [line 14]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$5:int *=n$6 [line 14]\n " shape="box"]
	

	 12 -> 9 ;
11 [label="11: Prune (false branch) \n   PRUNE((1 == 0), false); [line 14]\n " shape="invhouse"]
	

	 11 -> 13 ;
10 [label="10: Prune (true branch) \n   PRUNE((1 != 0), true); [line 14]\n " shape="invhouse"]
	

	 10 -> 12 ;
9 [label="9: + \n  " ]
	

	 9 -> 14 ;
8 [label="8:  UnaryOperator \n   n$3=*&0$?%__sil_tmpSIL_temp_conditional___n$0:int * [line 16]\n " shape="box"]
	

	 8 -> 2 ;
7 [label="7:  ConditinalStmt Branch \n   n$2=*&p:int * [line 16]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$0:int *=n$2 [line 16]\n " shape="box"]
	

	 7 -> 3 ;
6 [label="6:  ConditinalStmt Branch \n   n$1=*&p:int * [line 16]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$0:int *=n$1 [line 16]\n " shape="box"]
	

	 6 -> 3 ;
5 [label="5: Prune (false branch) \n   PRUNE((1 == 0), false); [line 16]\n " shape="invhouse"]
	

	 5 -> 7 ;
4 [label="4: Prune (true branch) \n   PRUNE((1 != 0), true); [line 16]\n " shape="invhouse"]
	

	 4 -> 6 ;
3 [label="3: + \n  " ]
	

	 3 -> 8 ;
2 [label="2: Exit dereference_ifthenelse \n  " color=yellow style=filled]
	

1 [label="1: Start dereference_ifthenelse\nFormals:  p:int *\nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$0:int * y:int  0$?%__sil_tmpSIL_temp_conditional___n$5:int * 0$?%__sil_tmpSIL_temp_conditional___n$10:int * x:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$0,&y,&0$?%__sil_tmpSIL_temp_conditional___n$5,&0$?%__sil_tmpSIL_temp_conditional___n$10,&x); [line 10]\n " color=yellow style=filled]
	

	 1 -> 16 ;
	 1 -> 17 ;
}
