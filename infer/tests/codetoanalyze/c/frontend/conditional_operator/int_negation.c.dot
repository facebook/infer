/* @generated */
digraph iCFG {
34 [label="34:  Return Stmt \n   n$2=*&0$?%__sil_tmpSIL_temp_conditional___n$0:int  [line 29]\n  *&return:int =n$2 [line 29]\n " shape="box"]
	

	 34 -> 28 ;
33 [label="33:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =1 [line 29]\n " shape="box"]
	

	 33 -> 29 ;
32 [label="32:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =0 [line 29]\n " shape="box"]
	

	 32 -> 29 ;
31 [label="31: Prune (false branch) \n   n$1=*&x:int  [line 29]\n  PRUNE((n$1 == 0), false); [line 29]\n " shape="invhouse"]
	

	 31 -> 33 ;
30 [label="30: Prune (true branch) \n   n$1=*&x:int  [line 29]\n  PRUNE((n$1 != 0), true); [line 29]\n " shape="invhouse"]
	

	 30 -> 32 ;
29 [label="29: + \n  " ]
	

	 29 -> 34 ;
28 [label="28: Exit neg \n  " color=yellow style=filled]
	

27 [label="27: Start neg\nFormals:  x:int \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$0:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$0); [line 29]\n " color=yellow style=filled]
	

	 27 -> 30 ;
	 27 -> 31 ;
26 [label="26:  Return Stmt \n   *&return:int =0 [line 25]\n " shape="box"]
	

	 26 -> 14 ;
25 [label="25:  Return Stmt \n   *&return:int =1 [line 23]\n " shape="box"]
	

	 25 -> 14 ;
24 [label="24: Prune (false branch) \n   PRUNE((n$3 == 0), false); [line 22]\n " shape="invhouse"]
	

	 24 -> 26 ;
23 [label="23: Prune (true branch) \n   PRUNE((n$3 != 0), true); [line 22]\n " shape="invhouse"]
	

	 23 -> 25 ;
22 [label="22:  Call _fun_identity \n   n$2=*&0$?%__sil_tmpSIL_temp_conditional___n$0:int  [line 22]\n  n$3=_fun_identity(n$2:int ) [line 22]\n " shape="box"]
	

	 22 -> 23 ;
	 22 -> 24 ;
21 [label="21:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =1 [line 22]\n " shape="box"]
	

	 21 -> 17 ;
20 [label="20:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =0 [line 22]\n " shape="box"]
	

	 20 -> 17 ;
19 [label="19: Prune (false branch) \n   n$1=*&x:int  [line 22]\n  PRUNE((n$1 == 0), false); [line 22]\n " shape="invhouse"]
	

	 19 -> 21 ;
18 [label="18: Prune (true branch) \n   n$1=*&x:int  [line 22]\n  PRUNE((n$1 != 0), true); [line 22]\n " shape="invhouse"]
	

	 18 -> 20 ;
17 [label="17: + \n  " ]
	

	 17 -> 22 ;
16 [label="16:  between_join_and_exit \n  " shape="box"]
	

	 16 -> 14 ;
15 [label="15: + \n  " ]
	

	 15 -> 16 ;
14 [label="14: Exit baz \n  " color=yellow style=filled]
	

13 [label="13: Start baz\nFormals:  x:int \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$0:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$0); [line 20]\n " color=yellow style=filled]
	

	 13 -> 18 ;
	 13 -> 19 ;
12 [label="12:  Return Stmt \n   *&return:int =0 [line 16]\n " shape="box"]
	

	 12 -> 5 ;
11 [label="11:  Return Stmt \n   *&return:int =1 [line 14]\n " shape="box"]
	

	 11 -> 5 ;
10 [label="10: Prune (false branch) \n   PRUNE((n$1 == 0), false); [line 13]\n " shape="invhouse"]
	

	 10 -> 12 ;
9 [label="9: Prune (true branch) \n   PRUNE((n$1 != 0), true); [line 13]\n " shape="invhouse"]
	

	 9 -> 11 ;
8 [label="8:  Call _fun_identity \n   n$0=*&x:int  [line 13]\n  n$1=_fun_identity(n$0:int ) [line 13]\n " shape="box"]
	

	 8 -> 9 ;
	 8 -> 10 ;
7 [label="7:  between_join_and_exit \n  " shape="box"]
	

	 7 -> 5 ;
6 [label="6: + \n  " ]
	

	 6 -> 7 ;
5 [label="5: Exit bar \n  " color=yellow style=filled]
	

4 [label="4: Start bar\nFormals:  x:int \nLocals:  \n   DECLARE_LOCALS(&return); [line 12]\n " color=yellow style=filled]
	

	 4 -> 8 ;
3 [label="3:  Return Stmt \n   n$0=*&x:int  [line 10]\n  *&return:int =n$0 [line 10]\n " shape="box"]
	

	 3 -> 2 ;
2 [label="2: Exit identity \n  " color=yellow style=filled]
	

1 [label="1: Start identity\nFormals:  x:int \nLocals:  \n   DECLARE_LOCALS(&return); [line 10]\n " color=yellow style=filled]
	

	 1 -> 3 ;
}
