/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// demo-ing the convenience of Doli, which supports grouping related signatures
// into one

//  several signatures in one match part
//  with and without throws clauses
in Java match {
    void  fun6tt(A[] a)  throws A under A<B,C<D,E>>.G.H
    A[][]  methD66(A.B[] x)  throws D under className
    private static void fun7(A[] a, B[][] bs) under G.Hhh
    void  fun6tt(A[] a, B[] b) throws cl1, C.D, E<B,? super A> under A.B<E,F>.D
} body {
    #lab2:
    n3 = __sil_mult(n0, n1)
    jmp lab3(n3)
}


//  several signatures in one  under
//  some with, and some without a throws clause
in Java match {
    void  fun6tt(A[] a)  throws A;
    A[][]  methD66(A.B[] x)  throws D;
    private static void fun7(A[] a, B[][] bs);
    void  fun6tt(A[] a, B[] b) throws cl1, C.D, E<B,? super A>;
    void mth();
    private A fun6tt(A[] a) throws A, B
              under A.B<C>.D<E,F>
} body {
  #lab2:
    n3 = __sil_mult(n0, n1)
    jmp lab3(n3)
}


// several signatures in one  under, several under-s
// in the same match-part
in Java match {
    void  fun6tt(A[] a)  throws A;
    A[][]  methD66(A.B[] x)  throws D
           under classFF
    public static void  madMeth(A[] a)  throws A
           under A.B.D<E,G>
    A[]  meth4Aa( )  throws B.E;
    void  funSD(A[] a)  throws B.E
           under classFF
    void  fun6tt(A[] a)  throws A under classC
} body {
  #lab2:
    n3 = __sil_mult(n0, n1)
    jmp lab3(n3)
 }

/* this should NOT parse -- the keyword under is missing

in Java match {
    void  fun6tt(A[] a)  throws A
} body {
   #lab2:
    n3 = __sil_mult(n0, n1)
    jmp lab3(n3)
}

*/
