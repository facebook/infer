codetoanalyze/cpp/pulse-17/std_optional.cpp, std_not_none_check_value_ok_FP, 5, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `std::optional::optional(Value arg)` (modelled),assigned,taking "then" branch,in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, std_none_no_check_bad, 2, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, std_none_copy_bad, 3, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,in call to `std::optional::optional(std::optional<Value> arg)` (modelled),invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, std_assign_bad, 5, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,in call to `std::optional::operator=(std::optional<Value> arg)` (modelled),invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, std_assign2_bad, 4, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `std::optional::operator=(None)` (modelled),is assigned an empty value,invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, FP_std_value_or_check_value_ok, 5, NULLPTR_DEREFERENCE, no_bucket, ERROR, [in call to `std::optional::optional(Value arg)` (modelled),in call to `std::optional::value_or() non-empty case` (modelled),assigned,taking "then" branch,in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, inside_try_catch_FP, 3, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `might_return_none`,parameter `b` of might_return_none,taking "then" branch,in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,return from call to `might_return_none`,invalid access occurs here]
