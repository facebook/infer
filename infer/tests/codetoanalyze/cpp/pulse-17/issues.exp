codetoanalyze/cpp/pulse-17/make_shared.cpp, make_shared_ptr::make_shared0_bad, 5, NULLPTR_DEREFERENCE, no_bucket, ERROR, [is assigned to the constant 42,assigned,taking "then" branch,is assigned to the null pointer,assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_shared.cpp, make_shared_ptr::make_shared1_bad, 7, NULLPTR_DEREFERENCE, no_bucket, ERROR, [is assigned to the constant 42,assigned,taking "then" branch,is assigned to the null pointer,assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_shared.cpp, make_shared_ptr::make_shared2_bad, 5, NULLPTR_DEREFERENCE, no_bucket, ERROR, [in call to `std::make_shared()` (modelled),in call to `std::shared_ptr::use_count()` (modelled),taking "then" branch,is assigned to the null pointer,assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_shared.cpp, make_shared_ptr::make_shared3_bad, 5, USE_AFTER_DELETE, no_bucket, ERROR, [invalidation part of the trace starts here,struct field address `pointer_field` created,in call to `make_shared_ptr::X::X`,allocated by call to `new` (modelled),assigned,return from call to `make_shared_ptr::X::X`,when calling `make_shared_ptr::X::~X` here,parameter `this` of make_shared_ptr::X::~X,when calling `make_shared_ptr::X::__infer_inner_destructor_~X` here,parameter `this` of make_shared_ptr::X::__infer_inner_destructor_~X,was invalidated by `delete`,use-after-lifetime part of the trace starts here,struct field address `pointer_field` created,in call to `make_shared_ptr::X::X`,allocated by call to `new` (modelled),assigned,return from call to `make_shared_ptr::X::X`,in call to `make_shared_ptr::X::X`,parameter `__param_0` of make_shared_ptr::X::X,assigned,return from call to `make_shared_ptr::X::X`,when calling `make_shared_ptr::X::~X` here,parameter `this` of make_shared_ptr::X::~X,when calling `make_shared_ptr::X::__infer_inner_destructor_~X` here,parameter `this` of make_shared_ptr::X::__infer_inner_destructor_~X,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_shared.cpp, make_shared_ptr::make_shared4_bad, 6, USE_AFTER_DELETE, no_bucket, ERROR, [invalidation part of the trace starts here,struct field address `pointer_field` created,in call to `make_shared_ptr::X::X`,allocated by call to `new` (modelled),assigned,return from call to `make_shared_ptr::X::X`,in call to `make_shared_ptr::X::X`,parameter `__param_0` of make_shared_ptr::X::X,assigned,return from call to `make_shared_ptr::X::X`,when calling `make_shared_ptr::X::~X` here,parameter `this` of make_shared_ptr::X::~X,when calling `make_shared_ptr::X::__infer_inner_destructor_~X` here,parameter `this` of make_shared_ptr::X::__infer_inner_destructor_~X,was invalidated by `delete`,use-after-lifetime part of the trace starts here,struct field address `pointer_field` created,in call to `make_shared_ptr::X::X`,allocated by call to `new` (modelled),assigned,return from call to `make_shared_ptr::X::X`,when calling `make_shared_ptr::X::~X` here,parameter `this` of make_shared_ptr::X::~X,when calling `make_shared_ptr::X::__infer_inner_destructor_~X` here,parameter `this` of make_shared_ptr::X::__infer_inner_destructor_~X,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_shared.cpp, make_shared_ptr::make_shared5_bad, 5, NULLPTR_DEREFERENCE, no_bucket, ERROR, [in call to `make_shared_ptr::Integer::Integer`,parameter `value2` of make_shared_ptr::Integer::Integer,assigned,return from call to `make_shared_ptr::Integer::Integer`,in call to `make_shared_ptr::Integer::get`,parameter `this` of make_shared_ptr::Integer::get,returned,return from call to `make_shared_ptr::Integer::get`,taking "then" branch,is assigned to the null pointer,assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_shared.cpp, make_shared_ptr::make_shared6_bad, 7, NULLPTR_DEREFERENCE, no_bucket, ERROR, [is assigned to the constant 42,assigned,taking "then" branch,is assigned to the null pointer,assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_unique.cpp, make_unique_ptr::make_unique0_bad, 5, NULLPTR_DEREFERENCE, no_bucket, ERROR, [is assigned to the constant 42,assigned,in call to `std::make_unique<int,_int>`,parameter `__args` of std::make_unique<int,_int>,in call to `std::forward<int>`,parameter `__t` of std::forward<int>,returned,return from call to `std::forward<int>`,assigned,return from call to `std::make_unique<int,_int>`,taking "then" branch,is assigned to the null pointer,assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_unique.cpp, make_unique_ptr::make_unique1_bad, 5, USE_AFTER_DELETE, no_bucket, ERROR, [invalidation part of the trace starts here,struct field address `pointer_field` created,in call to `make_unique_ptr::X::X`,allocated by call to `new` (modelled),assigned,return from call to `make_unique_ptr::X::X`,when calling `make_unique_ptr::X::~X` here,parameter `this` of make_unique_ptr::X::~X,when calling `make_unique_ptr::X::__infer_inner_destructor_~X` here,parameter `this` of make_unique_ptr::X::__infer_inner_destructor_~X,was invalidated by `delete`,use-after-lifetime part of the trace starts here,struct field address `pointer_field` created,in call to `make_unique_ptr::X::X`,allocated by call to `new` (modelled),assigned,return from call to `make_unique_ptr::X::X`,in call to `std::make_unique<make_unique_ptr::X,_make_unique_ptr::X>`,parameter `__args` of std::make_unique<make_unique_ptr::X,_make_unique_ptr::X>,in call to `std::forward<make_unique_ptr::X>`,parameter `__t` of std::forward<make_unique_ptr::X>,returned,return from call to `std::forward<make_unique_ptr::X>`,in call to `make_unique_ptr::X::X`,parameter `__param_0` of make_unique_ptr::X::X,assigned,return from call to `make_unique_ptr::X::X`,return from call to `std::make_unique<make_unique_ptr::X,_make_unique_ptr::X>`,when calling `make_unique_ptr::X::~X` here,parameter `this` of make_unique_ptr::X::~X,when calling `make_unique_ptr::X::__infer_inner_destructor_~X` here,parameter `this` of make_unique_ptr::X::__infer_inner_destructor_~X,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_unique.cpp, make_unique_ptr::make_unique2_bad, 6, USE_AFTER_DELETE, no_bucket, ERROR, [invalidation part of the trace starts here,struct field address `pointer_field` created,in call to `make_unique_ptr::X::X`,allocated by call to `new` (modelled),assigned,return from call to `make_unique_ptr::X::X`,in call to `std::make_unique<56462c074508ed>`,parameter `__args` of std::make_unique<56462c074508ed>,in call to `std::forward<make_unique_ptr::X_&>`,parameter `__t` of std::forward<make_unique_ptr::X_&>,returned,return from call to `std::forward<make_unique_ptr::X_&>`,in call to `make_unique_ptr::X::X`,parameter `__param_0` of make_unique_ptr::X::X,assigned,return from call to `make_unique_ptr::X::X`,return from call to `std::make_unique<56462c074508ed>`,when calling `make_unique_ptr::X::~X` here,parameter `this` of make_unique_ptr::X::~X,when calling `make_unique_ptr::X::__infer_inner_destructor_~X` here,parameter `this` of make_unique_ptr::X::__infer_inner_destructor_~X,was invalidated by `delete`,use-after-lifetime part of the trace starts here,struct field address `pointer_field` created,in call to `make_unique_ptr::X::X`,allocated by call to `new` (modelled),assigned,return from call to `make_unique_ptr::X::X`,when calling `make_unique_ptr::X::~X` here,parameter `this` of make_unique_ptr::X::~X,when calling `make_unique_ptr::X::__infer_inner_destructor_~X` here,parameter `this` of make_unique_ptr::X::__infer_inner_destructor_~X,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_unique.cpp, make_unique_ptr::make_unique3_bad, 7, NULLPTR_DEREFERENCE, no_bucket, ERROR, [is assigned to the constant 42,assigned,in call to `std::make_unique<int,_int_&>`,parameter `__args` of std::make_unique<int,_int_&>,in call to `std::forward<int_&>`,parameter `__t` of std::forward<int_&>,returned,return from call to `std::forward<int_&>`,assigned,return from call to `std::make_unique<int,_int_&>`,taking "then" branch,is assigned to the null pointer,assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/make_unique.cpp, make_unique_ptr::make_unique_ptr_release_bad, 2, MEMORY_LEAK_CPP, no_bucket, ERROR, [allocation part of the trace starts here,variable `x` declared here,when calling `std::make_unique<make_unique_ptr::X>` here,allocated by call to `new` (modelled),when calling `make_unique_ptr::X::X` here,allocated by `new` here,memory becomes unreachable here]
codetoanalyze/cpp/pulse-17/shared_lock.cpp, SharedLock::constructor_bad, 3, NULLPTR_DEREFERENCE, no_bucket, ERROR, [in call to `std::shared_lock::shared_lock()` (modelled),is assigned to the null pointer,in call to `std::shared_lock::mutex()` (modelled),assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/shared_lock.cpp, SharedLock::copy_null_deref_bad, 4, NULLPTR_DEREFERENCE, no_bucket, ERROR, [in call to `std::shared_lock::shared_lock()` (modelled),is assigned to the null pointer,in call to `std::shared_lock::shared_lock(std::shared_lock<T>)` (modelled),in call to `std::shared_lock::mutex()` (modelled),assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/shared_lock.cpp, SharedLock::assign_null_deref_bad, 6, NULLPTR_DEREFERENCE, no_bucket, ERROR, [in call to `std::shared_lock::shared_lock()` (modelled),is assigned to the null pointer,in call to `std::shared_lock::operator=(std::shared_lock<T>)` (modelled),in call to `std::shared_lock::mutex()` (modelled),assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/shared_lock.cpp, SharedLock::move_null_deref_bad, 5, NULLPTR_DEREFERENCE, no_bucket, ERROR, [in call to `std::shared_lock::shared_lock(std::shared_lock<T>)` (modelled),is assigned to the null pointer,in call to `std::shared_lock::mutex()` (modelled),assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/shared_lock.cpp, SharedLock::release_bad, 7, NULLPTR_DEREFERENCE, no_bucket, ERROR, [variable `m` declared here,in call to `std::shared_lock::shared_lock(Mutex)` (modelled),in call to `std::shared_lock::mutex()` (modelled),assigned,in call to `std::shared_lock::release()` (modelled),in call to `std::shared_lock::release()` (modelled),assigned,taking "then" branch,in call to `std::shared_lock::mutex()` (modelled),assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/shared_lock.cpp, SharedLock::swap_bad, 9, NULLPTR_DEREFERENCE, no_bucket, ERROR, [variable `m1` declared here,variable `m2` declared here,in call to `std::shared_lock::shared_lock(Mutex)` (modelled),in call to `std::shared_lock::shared_lock(Mutex)` (modelled),in call to `std::shared_lock::swap(std::shared_lock<Mutex>)` (modelled),in call to `std::shared_lock::mutex()` (modelled),taking "then" branch,in call to `std::shared_lock::mutex()` (modelled),taking "then" branch,in call to `std::shared_lock::release()` (modelled),is assigned to the null pointer,in call to `std::shared_lock::mutex()` (modelled),assigned,invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, std_none_no_check_bad, 2, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, std_none_copy_bad, 3, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,in call to `std::optional::optional(std::optional<Value> arg)` (modelled),invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, std_assign_bad, 5, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,in call to `std::optional::operator=(std::optional<Value> arg)` (modelled),invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, std_assign2_bad, 4, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `std::optional::operator=(None)` (modelled),is assigned an empty value,invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, std_operator_arrow_bad, 0, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,when calling `std_emplace` here,parameter `state` of std_emplace,invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, might_return_none, 0, PULSE_CONST_REFABLE, no_bucket, ERROR, [Parameter x]
codetoanalyze/cpp/pulse-17/std_optional.cpp, reassing_non_empty_ok, 1, PULSE_UNNECESSARY_COPY_INTERMEDIATE, no_bucket, ERROR, [copied here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, FP_cannot_be_empty, 2, NULLPTR_DEREFERENCE, no_bucket, ERROR, [in call to `getEnum`,in call to function `getenv` with no summary,assigned,taking "then" branch,is assigned to the null pointer,returned,return from call to `getEnum`,taking "then" branch,variable `C++ temporary` declared here,in call to `getOptionalValue`,in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,return from call to `getOptionalValue`,invalid access occurs here]
codetoanalyze/cpp/pulse-17/std_optional.cpp, inside_try_catch_FP, 3, OPTIONAL_EMPTY_ACCESS, no_bucket, ERROR, [variable `foo` accessed here,in call to `might_return_none`,parameter `b` of might_return_none,taking "then" branch,in call to `std::optional::optional(=nullopt)` (modelled),is assigned an empty value,return from call to `might_return_none`,invalid access occurs here]
