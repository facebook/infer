/* @generated */
digraph iCFG {
34 [label="34:  DeclStmt \n   _fun_binary_conditional::X_X(&a:class binary_conditional::X *) [line 28]\n " shape="box"]
	

	 34 -> 28 ;
33 [label="33:  DeclStmt \n   n$7=*&0$?%__sil_tmpSIL_temp_conditional___n$1:class binary_conditional::X  [line 29]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X =n$7 [line 29]\n  _fun_binary_conditional::X_X(&x:class binary_conditional::X *,&0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X &) [line 29]\n " shape="box"]
	

	 33 -> 26 ;
32 [label="32:  ConditinalStmt Branch \n   _fun_binary_conditional::X_X(&0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X *,&a:class binary_conditional::X &) [line 29]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$1:class binary_conditional::X =&0$?%__sil_tmpSIL_materialize_temp__n$0 [line 29]\n " shape="box"]
	

	 32 -> 27 ;
31 [label="31:  ConditinalStmt Branch \n   _fun_binary_conditional::getX(&0$?%__sil_tmpSIL_materialize_temp__n$5:class binary_conditional::X *) [line 29]\n  _fun_binary_conditional::X_X(&0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X *,&0$?%__sil_tmpSIL_materialize_temp__n$5:class binary_conditional::X &) [line 29]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$1:class binary_conditional::X =&0$?%__sil_tmpSIL_materialize_temp__n$0 [line 29]\n " shape="box"]
	

	 31 -> 27 ;
30 [label="30: Prune (false branch) \n   PRUNE((n$4 == 0), false); [line 29]\n " shape="invhouse"]
	

	 30 -> 32 ;
29 [label="29: Prune (true branch) \n   PRUNE((n$4 != 0), true); [line 29]\n " shape="invhouse"]
	

	 29 -> 31 ;
28 [label="28:  Call _fun_binary_conditional::X_operator_bool \n   _fun_binary_conditional::getX(&0$?%__sil_tmp__temp_return_n$3:class binary_conditional::X *) [line 29]\n  n$4=_fun_binary_conditional::X_operator_bool(&0$?%__sil_tmp__temp_return_n$3:class binary_conditional::X &) [line 29]\n " shape="box"]
	

	 28 -> 29 ;
	 28 -> 30 ;
27 [label="27: + \n  " ]
	

	 27 -> 33 ;
26 [label="26: Exit binary_conditional::conditional \n  " color=yellow style=filled]
	

25 [label="25: Start binary_conditional::conditional\nFormals: \nLocals:  x:class binary_conditional::X  0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X  0$?%__sil_tmpSIL_temp_conditional___n$1:class binary_conditional::X  0$?%__sil_tmp__temp_return_n$3:class binary_conditional::X  0$?%__sil_tmpSIL_materialize_temp__n$5:class binary_conditional::X  a:class binary_conditional::X  \n   DECLARE_LOCALS(&return,&x,&0$?%__sil_tmpSIL_materialize_temp__n$0,&0$?%__sil_tmpSIL_temp_conditional___n$1,&0$?%__sil_tmp__temp_return_n$3,&0$?%__sil_tmpSIL_materialize_temp__n$5,&a); [line 27]\n " color=yellow style=filled]
	

	 25 -> 34 ;
24 [label="24:  DeclStmt \n   _fun_binary_conditional::X_X(&a:class binary_conditional::X *) [line 23]\n " shape="box"]
	

	 24 -> 22 ;
23 [label="23:  DeclStmt \n   n$5=*&0$?%__sil_tmpSIL_temp_conditional___n$2:class binary_conditional::X  [line 24]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X =n$5 [line 24]\n  _fun_binary_conditional::X_X(&x:class binary_conditional::X *,&0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X &) [line 24]\n " shape="box"]
	

	 23 -> 15 ;
22 [label="22:  BinaryConditinalStmt Init \n   _fun_binary_conditional::getX(&0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X *) [line 24]\n " shape="box"]
	

	 22 -> 17 ;
21 [label="21:  ConditinalStmt Branch \n   _fun_binary_conditional::X_X(&0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X *,&a:class binary_conditional::X &) [line 24]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$2:class binary_conditional::X =&0$?%__sil_tmpSIL_materialize_temp__n$0 [line 24]\n " shape="box"]
	

	 21 -> 16 ;
20 [label="20:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_materialize_temp__n$4:class binary_conditional::X =&0$?%__sil_tmpSIL_materialize_temp__n$0 [line 24]\n  _fun_binary_conditional::X_X(&0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X *,&0$?%__sil_tmpSIL_materialize_temp__n$4:class binary_conditional::X &) [line 24]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$2:class binary_conditional::X =&0$?%__sil_tmpSIL_materialize_temp__n$0 [line 24]\n " shape="box"]
	

	 20 -> 16 ;
19 [label="19: Prune (false branch) \n   PRUNE((n$3 == 0), false); [line 24]\n " shape="invhouse"]
	

	 19 -> 21 ;
18 [label="18: Prune (true branch) \n   PRUNE((n$3 != 0), true); [line 24]\n " shape="invhouse"]
	

	 18 -> 20 ;
17 [label="17:  Call _fun_binary_conditional::X_operator_bool \n   n$3=_fun_binary_conditional::X_operator_bool(&0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X &) [line 24]\n " shape="box"]
	

	 17 -> 18 ;
	 17 -> 19 ;
16 [label="16: + \n  " ]
	

	 16 -> 23 ;
15 [label="15: Exit binary_conditional::binaryConditional \n  " color=yellow style=filled]
	

14 [label="14: Start binary_conditional::binaryConditional\nFormals: \nLocals:  x:class binary_conditional::X  0$?%__sil_tmpSIL_materialize_temp__n$0:class binary_conditional::X  0$?%__sil_tmpSIL_temp_conditional___n$2:class binary_conditional::X  0$?%__sil_tmpSIL_materialize_temp__n$4:class binary_conditional::X  a:class binary_conditional::X  \n   DECLARE_LOCALS(&return,&x,&0$?%__sil_tmpSIL_materialize_temp__n$0,&0$?%__sil_tmpSIL_temp_conditional___n$2,&0$?%__sil_tmpSIL_materialize_temp__n$4,&a); [line 22]\n " color=yellow style=filled]
	

	 14 -> 24 ;
13 [label="13:  DeclStmt \n   _fun_binary_conditional::X_X(&x:class binary_conditional::X *) [line 17]\n " shape="box"]
	

	 13 -> 12 ;
12 [label="12:  Return Stmt \n   n$0=*&__return_param:class binary_conditional::X * [line 18]\n  _fun_binary_conditional::X_X(n$0:class binary_conditional::X *,&x:class binary_conditional::X &) [line 18]\n " shape="box"]
	

	 12 -> 11 ;
11 [label="11: Exit binary_conditional::getX \n  " color=yellow style=filled]
	

10 [label="10: Start binary_conditional::getX\nFormals:  __return_param:class binary_conditional::X *\nLocals:  x:class binary_conditional::X  \n   DECLARE_LOCALS(&return,&x); [line 16]\n " color=yellow style=filled]
	

	 10 -> 13 ;
9 [label="9: Exit binary_conditional::X_X \n  " color=yellow style=filled]
	

8 [label="8: Start binary_conditional::X_X\nFormals:  this:class binary_conditional::X * __param_0:class binary_conditional::X &\nLocals:  \n   DECLARE_LOCALS(&return); [line 12]\n " color=yellow style=filled]
	

	 8 -> 9 ;
7 [label="7: Exit binary_conditional::X_X \n  " color=yellow style=filled]
	

6 [label="6: Start binary_conditional::X_X\nFormals:  this:class binary_conditional::X * __param_0:class binary_conditional::X &\nLocals:  \n   DECLARE_LOCALS(&return); [line 12]\n " color=yellow style=filled]
	

	 6 -> 7 ;
5 [label="5: Exit binary_conditional::X_X \n  " color=yellow style=filled]
	

4 [label="4: Start binary_conditional::X_X\nFormals:  this:class binary_conditional::X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 12]\n " color=yellow style=filled]
	

	 4 -> 5 ;
3 [label="3:  Return Stmt \n   *&return:_Bool =1 [line 13]\n " shape="box"]
	

	 3 -> 2 ;
2 [label="2: Exit binary_conditional::X_operator_bool \n  " color=yellow style=filled]
	

1 [label="1: Start binary_conditional::X_operator_bool\nFormals:  this:class binary_conditional::X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 13]\n " color=yellow style=filled]
	

	 1 -> 3 ;
}
