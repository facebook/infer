/* @generated */
digraph iCFG {
18 [label="18:  DeclStmt \n   *&0$?%__sil_tmpSIL_materialize_temp__n$0[0]:int =1 [line 24]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$0[1]:int =2 [line 24]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$0[2]:int =3 [line 24]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$0[3]:int =4 [line 24]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$0[4]:int =5 [line 24]\n  n$1=_fun___infer_skip_function(&0$?%__sil_tmpSIL_materialize_temp__n$0:int [5]) [line 24]\n  _fun_X_X(&x:class X *,n$1:class std::initializer_list<int> ) [line 24]\n " shape="box"]
	

	 18 -> 17 ;
17 [label="17: Exit main \n  " color=yellow style=filled]
	

16 [label="16: Start main\nFormals: \nLocals:  x:class X  0$?%__sil_tmpSIL_materialize_temp__n$0:int [5] \n   DECLARE_LOCALS(&return,&x,&0$?%__sil_tmpSIL_materialize_temp__n$0); [line 24]\n " color=yellow style=filled]
	

	 16 -> 18 ;
15 [label="15:  BinaryOperatorStmt: Assign \n   n$8=*&this:class X * [line 16]\n  n$9=*&this:class X * [line 16]\n  n$10=*n$9.sum:int  [line 16]\n  n$11=*&i:int * [line 16]\n  n$12=*n$11:int  [line 16]\n  *n$8.sum:int =(n$10 + n$12) [line 16]\n " shape="box"]
	

	 15 -> 11 ;
14 [label="14: Prune (false branch) \n   PRUNE(((n$4 != n$7) == 0), false); [line 15]\n " shape="invhouse"]
	

	 14 -> 8 ;
13 [label="13: Prune (true branch) \n   PRUNE(((n$4 != n$7) != 0), true); [line 15]\n " shape="invhouse"]
	

	 13 -> 15 ;
12 [label="12:  BinaryOperatorStmt: NE \n   n$4=*&i:int * [line 15]\n  n$5=*&list:class std::initializer_list<int> & [line 15]\n  _=*n$5:class std::initializer_list<int>  [line 15]\n  n$7=_fun_std::initializer_list<int>_end(n$5:class std::initializer_list<int> &) [line 15]\n " shape="box"]
	

	 12 -> 13 ;
	 12 -> 14 ;
11 [label="11:  UnaryOperator \n   n$3=*&i:int * [line 15]\n  *&i:int *=(n$3 + 1) [line 15]\n " shape="box"]
	

	 11 -> 9 ;
10 [label="10:  DeclStmt \n   n$0=*&list:class std::initializer_list<int> & [line 15]\n  _=*n$0:class std::initializer_list<int>  [line 15]\n  n$2=_fun_std::initializer_list<int>_begin(n$0:class std::initializer_list<int> &) [line 15]\n  *&i:int *=n$2 [line 15]\n " shape="box"]
	

	 10 -> 9 ;
9 [label="9: + \n  " ]
	

	 9 -> 12 ;
8 [label="8: Exit X_X \n  " color=yellow style=filled]
	

7 [label="7: Start X_X\nFormals:  this:class X * list:class std::initializer_list<int> &\nLocals:  i:int * \n   DECLARE_LOCALS(&return,&i); [line 14]\n " color=yellow style=filled]
	

	 7 -> 10 ;
6 [label="6:  Return Stmt \n   n$0=*&this:class std::initializer_list<int> * [line 93]\n  n$1=*n$0.__begin_:int * [line 93]\n  n$2=*&this:class std::initializer_list<int> * [line 93]\n  n$3=*n$2.__size_:unsigned long  [line 93]\n  *&return:int *=(n$1 + n$3) [line 93]\n " shape="box"]
	

	 6 -> 5 ;
5 [label="5: Exit std::initializer_list<int>_end \n  " color=yellow style=filled]
	

4 [label="4: Start std::initializer_list<int>_end\nFormals:  this:class std::initializer_list<int> *\nLocals:  \n   DECLARE_LOCALS(&return); [line 91]\n " color=yellow style=filled]
	

	 4 -> 6 ;
3 [label="3:  Return Stmt \n   n$0=*&this:class std::initializer_list<int> * [line 89]\n  n$1=*n$0.__begin_:int * [line 89]\n  *&return:int *=n$1 [line 89]\n " shape="box"]
	

	 3 -> 2 ;
2 [label="2: Exit std::initializer_list<int>_begin \n  " color=yellow style=filled]
	

1 [label="1: Start std::initializer_list<int>_begin\nFormals:  this:class std::initializer_list<int> *\nLocals:  \n   DECLARE_LOCALS(&return); [line 87]\n " color=yellow style=filled]
	

	 1 -> 3 ;
}
