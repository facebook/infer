/* @generated */
digraph cfg {
"class_method_in_conditional.2a19b0bd8eafdb32_1" [label="1: Start class_method_in_conditional\nFormals: \nLocals:  c:objc_class* \n  " color=yellow style=filled]
	

	 "class_method_in_conditional.2a19b0bd8eafdb32_1" -> "class_method_in_conditional.2a19b0bd8eafdb32_9" ;
"class_method_in_conditional.2a19b0bd8eafdb32_2" [label="2: Exit class_method_in_conditional \n  " color=yellow style=filled]
	

"class_method_in_conditional.2a19b0bd8eafdb32_3" [label="3:  Return Stmt \n   *&return:_Bool=0 [line 107, column 3]\n " shape="box"]
	

	 "class_method_in_conditional.2a19b0bd8eafdb32_3" -> "class_method_in_conditional.2a19b0bd8eafdb32_2" ;
"class_method_in_conditional.2a19b0bd8eafdb32_4" [label="4: + \n   END_BRANCHES\n " ]
	

	 "class_method_in_conditional.2a19b0bd8eafdb32_4" -> "class_method_in_conditional.2a19b0bd8eafdb32_3" ;
"class_method_in_conditional.2a19b0bd8eafdb32_5" [label="5:  Message Call: class \n   n$0=*&c:objc_class* [line 104, column 8]\n " shape="box"]
	

	 "class_method_in_conditional.2a19b0bd8eafdb32_5" -> "class_method_in_conditional.2a19b0bd8eafdb32_6" ;
	 "class_method_in_conditional.2a19b0bd8eafdb32_5" -> "class_method_in_conditional.2a19b0bd8eafdb32_7" ;
"class_method_in_conditional.2a19b0bd8eafdb32_6" [label="6: Prune (true branch, if (terminated)) \n   PRUNE(sizeof(t=objc_class), true); [line 104, column 7]\n " shape="invhouse"]
	

	 "class_method_in_conditional.2a19b0bd8eafdb32_6" -> "class_method_in_conditional.2a19b0bd8eafdb32_8" ;
"class_method_in_conditional.2a19b0bd8eafdb32_7" [label="7: Prune (false branch, if (terminated)) \n   PRUNE(!sizeof(t=objc_class), false); [line 104, column 7]\n " shape="invhouse"]
	

	 "class_method_in_conditional.2a19b0bd8eafdb32_7" -> "class_method_in_conditional.2a19b0bd8eafdb32_4" ;
"class_method_in_conditional.2a19b0bd8eafdb32_8" [label="8:  Return Stmt \n   *&return:_Bool=1 [line 105, column 5]\n " shape="box"]
	

	 "class_method_in_conditional.2a19b0bd8eafdb32_8" -> "class_method_in_conditional.2a19b0bd8eafdb32_2" ;
"class_method_in_conditional.2a19b0bd8eafdb32_9" [label="9:  DeclStmt \n   VARIABLE_DECLARED(c:objc_class*); [line 103, column 3]\n  n$3=_fun_foo() [line 103, column 13]\n  *&c:objc_class*=n$3 [line 103, column 3]\n " shape="box"]
	

	 "class_method_in_conditional.2a19b0bd8eafdb32_9" -> "class_method_in_conditional.2a19b0bd8eafdb32_5" ;
"call_alloc_class#A#[class].ad5ad169bfefdaf6_1" [label="1: Start A.call_alloc_class\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 "call_alloc_class#A#[class].ad5ad169bfefdaf6_1" -> "call_alloc_class#A#[class].ad5ad169bfefdaf6_3" ;
"call_alloc_class#A#[class].ad5ad169bfefdaf6_2" [label="2: Exit A.call_alloc_class \n  " color=yellow style=filled]
	

"call_alloc_class#A#[class].ad5ad169bfefdaf6_3" [label="3:  Call alloc \n   n$5=_fun___objc_alloc_no_fail(sizeof(t=A):unsigned long) [line 57, column 3]\n " shape="box"]
	

	 "call_alloc_class#A#[class].ad5ad169bfefdaf6_3" -> "call_alloc_class#A#[class].ad5ad169bfefdaf6_2" ;
"call_test_class#A#[class].7405649a69db528a_1" [label="1: Start A.call_test_class\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 "call_test_class#A#[class].7405649a69db528a_1" -> "call_test_class#A#[class].7405649a69db528a_3" ;
"call_test_class#A#[class].7405649a69db528a_2" [label="2: Exit A.call_test_class \n  " color=yellow style=filled]
	

"call_test_class#A#[class].7405649a69db528a_3" [label="3:  Message Call: test_class \n   n$4=_fun_C.test_class() [line 53, column 3]\n " shape="box"]
	

	 "call_test_class#A#[class].7405649a69db528a_3" -> "call_test_class#A#[class].7405649a69db528a_2" ;
"calling_super#A#[class].d5d1550005d53f32_1" [label="1: Start A.calling_super\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 "calling_super#A#[class].d5d1550005d53f32_1" -> "calling_super#A#[class].d5d1550005d53f32_3" ;
"calling_super#A#[class].d5d1550005d53f32_2" [label="2: Exit A.calling_super \n  " color=yellow style=filled]
	

"calling_super#A#[class].d5d1550005d53f32_3" [label="3:  Message Call: test_class \n   n$15=_fun_C.test_class() [line 82, column 3]\n " shape="box"]
	

	 "calling_super#A#[class].d5d1550005d53f32_3" -> "calling_super#A#[class].d5d1550005d53f32_2" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_1" [label="1: Start A.class_method_fst_arg_of_class_method_inside_instance_method\nFormals: \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$27:NSBundle* stringsBundlePath:NSString* \n  " color=yellow style=filled]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_1" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_13" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_2" [label="2: Exit A.class_method_fst_arg_of_class_method_inside_instance_method \n  " color=yellow style=filled]
	

"class_method_fst_arg_of_class_met.9ddf691765febed7_3" [label="3:  Return Stmt \n   n$24=*&#GB<codetoanalyze/objc/frontend/self_static/Self.m>$A.class_method_fst_arg_of_class_method_inside_instance_method.bundle:NSBundle* [line 120, column 10]\n " shape="box"]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_3" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_4" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_4" [label="4:  Return Stmt \n   *&return:NSBundle*=n$24 [line 120, column 3]\n " shape="box"]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_4" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_2" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_5" [label="5: + \n   END_BRANCHES\n " ]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_5" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_11" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_6" [label="6: Prune (true branch, boolean exp (terminated)) \n   PRUNE(n$26, true); [line 119, column 12]\n " shape="invhouse"]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_6" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_8" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_7" [label="7: Prune (false branch, boolean exp (terminated)) \n   PRUNE(!n$26, false); [line 119, column 12]\n " shape="invhouse"]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_7" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_9" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_8" [label="8:  ConditionalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$27:NSBundle*=n$26 [line 119, column 12]\n " shape="box"]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_8" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_5" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_9" [label="9:  ConditionalStmt Branch \n   n$28=_fun_NSBundle.mainBundle() [line 119, column 59]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$27:NSBundle*=n$28 [line 119, column 12]\n " shape="box"]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_9" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_5" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_10" [label="10:  BinaryConditionalStmt Init \n   n$25=*&stringsBundlePath:NSString* [line 119, column 37]\n  n$26=_fun_NSBundle.bundleWithPath:(n$25:NSString*) [line 119, column 12]\n " shape="box"]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_10" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_6" ;
	 "class_method_fst_arg_of_class_met.9ddf691765febed7_10" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_7" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_11" [label="11:  BinaryConditionalStmt Init \n   n$29=*&0$?%__sil_tmpSIL_temp_conditional___n$27:NSBundle* [line 119, column 12]\n " shape="box"]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_11" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_12" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_12" [label="12:  BinaryOperatorStmt: Assign \n   *&#GB<codetoanalyze/objc/frontend/self_static/Self.m>$A.class_method_fst_arg_of_class_method_inside_instance_method.bundle:NSBundle*=n$29 [line 119, column 3]\n " shape="box"]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_12" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_3" ;
"class_method_fst_arg_of_class_met.9ddf691765febed7_13" [label="13:  DeclStmt \n   VARIABLE_DECLARED(stringsBundlePath:NSString*); [line 116, column 3]\n  n$32=_fun_NSBundle.bundleForClass:(sizeof(t=B):unsigned long) [line 117, column 8]\n  n$30=_fun_NSString.stringWithUTF8String:(\"Strings\":char* const ) [line 117, column 60]\n  n$31=_fun_NSString.stringWithUTF8String:(\"bundle\":char* const ) [line 118, column 60]\n  n$33=_fun_NSBundle.pathForResource:ofType:(n$32:NSBundle*,n$30:NSString*,n$31:NSString*) virtual [line 117, column 7]\n  *&stringsBundlePath:NSString*=n$33 [line 116, column 3]\n " shape="box"]
	

	 "class_method_fst_arg_of_class_met.9ddf691765febed7_13" -> "class_method_fst_arg_of_class_met.9ddf691765febed7_10" ;
"test_class#A#[class].eca678ace24c19fb_1" [label="1: Start A.test_class\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 "test_class#A#[class].eca678ace24c19fb_1" -> "test_class#A#[class].eca678ace24c19fb_2" ;
"test_class#A#[class].eca678ace24c19fb_2" [label="2: Exit A.test_class \n  " color=yellow style=filled]
	

"used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_1" [label="1: Start A.used_in_binary_op:\nFormals:  c:objc_class*\nLocals:  \n  " color=yellow style=filled]
	

	 "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_1" -> "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_5" ;
"used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_2" [label="2: Exit A.used_in_binary_op: \n  " color=yellow style=filled]
	

"used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_3" [label="3: + \n   END_BRANCHES\n " ]
	

	 "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_3" -> "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_4" ;
"used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_4" [label="4:  between_join_and_exit \n   END_BRANCHES\n " shape="box"]
	

	 "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_4" -> "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_2" ;
"used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_5" [label="5:  BinaryOperatorStmt: NE \n   n$20=*sizeof(t=A):objc_class* [line 94, column 7]\n  n$21=*&c:objc_class* [line 94, column 15]\n " shape="box"]
	

	 "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_5" -> "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_6" ;
	 "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_5" -> "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_7" ;
"used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_6" [label="6: Prune (true branch, if (terminated)) \n   PRUNE((n$20 != n$21), true); [line 94, column 7]\n " shape="invhouse"]
	

	 "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_6" -> "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_8" ;
"used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_7" [label="7: Prune (false branch, if (terminated)) \n   PRUNE(!(n$20 != n$21), false); [line 94, column 7]\n " shape="invhouse"]
	

	 "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_7" -> "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_9" ;
"used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_8" [label="8:  Return Stmt \n   *&return:int=1 [line 95, column 5]\n " shape="box"]
	

	 "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_8" -> "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_2" ;
"used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_9" [label="9:  Return Stmt \n   *&return:int=0 [line 97, column 5]\n " shape="box"]
	

	 "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_9" -> "used_in_binary_op:#A(struct objc_.f6bebf72c8be64fe_2" ;
"call_alloc_instance#A#[instance].38797791774ded3f_1" [label="1: Start A.call_alloc_instance\nFormals:  self:A*\nLocals:  \n  " color=yellow style=filled]
	

	 "call_alloc_instance#A#[instance].38797791774ded3f_1" -> "call_alloc_instance#A#[instance].38797791774ded3f_3" ;
"call_alloc_instance#A#[instance].38797791774ded3f_2" [label="2: Exit A.call_alloc_instance \n  " color=yellow style=filled]
	

"call_alloc_instance#A#[instance].38797791774ded3f_3" [label="3:  Call alloc \n   n$6=_fun___objc_alloc_no_fail(sizeof(t=A):unsigned long) [line 61, column 3]\n " shape="box"]
	

	 "call_alloc_instance#A#[instance].38797791774ded3f_3" -> "call_alloc_instance#A#[instance].38797791774ded3f_2" ;
"call_class_instance#A#[instance].55e5829362abaa91_1" [label="1: Start A.call_class_instance\nFormals:  self:A*\nLocals:  \n  " color=yellow style=filled]
	

	 "call_class_instance#A#[instance].55e5829362abaa91_1" -> "call_class_instance#A#[instance].55e5829362abaa91_3" ;
"call_class_instance#A#[instance].55e5829362abaa91_2" [label="2: Exit A.call_class_instance \n  " color=yellow style=filled]
	

"call_class_instance#A#[instance].55e5829362abaa91_3" [label="3:  Message Call: test_class \n   n$7=_fun_C.test_class() [line 65, column 3]\n " shape="box"]
	

	 "call_class_instance#A#[instance].55e5829362abaa91_3" -> "call_class_instance#A#[instance].55e5829362abaa91_2" ;
"call_class_instance_with_class_na.b24af309449f4307_1" [label="1: Start A.call_class_instance_with_class_name\nFormals:  self:A*\nLocals:  \n  " color=yellow style=filled]
	

	 "call_class_instance_with_class_na.b24af309449f4307_1" -> "call_class_instance_with_class_na.b24af309449f4307_3" ;
"call_class_instance_with_class_na.b24af309449f4307_2" [label="2: Exit A.call_class_instance_with_class_name \n  " color=yellow style=filled]
	

"call_class_instance_with_class_na.b24af309449f4307_3" [label="3:  Message Call: test_class \n   n$8=_fun_A.test_class() [line 69, column 3]\n " shape="box"]
	

	 "call_class_instance_with_class_na.b24af309449f4307_3" -> "call_class_instance_with_class_na.b24af309449f4307_2" ;
"call_test#A#[instance].2e77def1a66dfbe3_1" [label="1: Start A.call_test\nFormals:  self:A*\nLocals:  \n  " color=yellow style=filled]
	

	 "call_test#A#[instance].2e77def1a66dfbe3_1" -> "call_test#A#[instance].2e77def1a66dfbe3_3" ;
"call_test#A#[instance].2e77def1a66dfbe3_2" [label="2: Exit A.call_test \n  " color=yellow style=filled]
	

"call_test#A#[instance].2e77def1a66dfbe3_3" [label="3:  Message Call: test \n   n$1=*&self:A* [line 46, column 4]\n  n$2=_fun_A.test(n$1:A*) virtual [line 46, column 3]\n " shape="box"]
	

	 "call_test#A#[instance].2e77def1a66dfbe3_3" -> "call_test#A#[instance].2e77def1a66dfbe3_2" ;
"class_method_fst_arg_of_class_met.e3acd68e7d97ea4a_1" [label="1: Start A.class_method_fst_arg_of_class_method\nFormals:  self:A*\nLocals:  \n  " color=yellow style=filled]
	

	 "class_method_fst_arg_of_class_met.e3acd68e7d97ea4a_1" -> "class_method_fst_arg_of_class_met.e3acd68e7d97ea4a_3" ;
"class_method_fst_arg_of_class_met.e3acd68e7d97ea4a_2" [label="2: Exit A.class_method_fst_arg_of_class_method \n  " color=yellow style=filled]
	

"class_method_fst_arg_of_class_met.e3acd68e7d97ea4a_3" [label="3:  Return Stmt \n   n$23=_fun_NSBundle.bundleForClass:(sizeof(t=A):unsigned long) [line 111, column 10]\n " shape="box"]
	

	 "class_method_fst_arg_of_class_met.e3acd68e7d97ea4a_3" -> "class_method_fst_arg_of_class_met.e3acd68e7d97ea4a_4" ;
"class_method_fst_arg_of_class_met.e3acd68e7d97ea4a_4" [label="4:  Return Stmt \n   *&return:NSBundle*=n$23 [line 111, column 3]\n " shape="box"]
	

	 "class_method_fst_arg_of_class_met.e3acd68e7d97ea4a_4" -> "class_method_fst_arg_of_class_met.e3acd68e7d97ea4a_2" ;
"dealloc#A#[instance].cb1004dc8428c0dc_1" [label="1: Start A.dealloc\nFormals:  self:A*\nLocals:  \n  " color=yellow style=filled]
	

	 "dealloc#A#[instance].cb1004dc8428c0dc_1" -> "dealloc#A#[instance].cb1004dc8428c0dc_4" ;
"dealloc#A#[instance].cb1004dc8428c0dc_2" [label="2: Exit A.dealloc \n  " color=yellow style=filled]
	

"dealloc#A#[instance].cb1004dc8428c0dc_3" [label="3:  Call dealloc \n  " shape="box"]
	

	 "dealloc#A#[instance].cb1004dc8428c0dc_3" -> "dealloc#A#[instance].cb1004dc8428c0dc_2" ;
"dealloc#A#[instance].cb1004dc8428c0dc_4" [label="4:  Call dealloc \n   n$4=*&self:A* [line 40, column 1]\n  n$5=_fun___objc_get_ref_count(n$4:A*) [line 40, column 1]\n  n$6=_fun___objc_set_ref_count(n$4:A*,(n$5 - 1):unsigned int) [line 40, column 1]\n  n$7=_fun___objc_get_ref_count(n$4:A*) [line 40, column 1]\n " shape="box"]
	

	 "dealloc#A#[instance].cb1004dc8428c0dc_4" -> "dealloc#A#[instance].cb1004dc8428c0dc_5" ;
	 "dealloc#A#[instance].cb1004dc8428c0dc_4" -> "dealloc#A#[instance].cb1004dc8428c0dc_6" ;
"dealloc#A#[instance].cb1004dc8428c0dc_5" [label="5: Prune (true branch, if (terminated)) \n   PRUNE((n$7 == 0), true); [line 40, column 1]\n " shape="invhouse"]
	

	 "dealloc#A#[instance].cb1004dc8428c0dc_5" -> "dealloc#A#[instance].cb1004dc8428c0dc_3" ;
"dealloc#A#[instance].cb1004dc8428c0dc_6" [label="6: Prune (false branch, if (terminated)) \n   PRUNE((n$7 != 0), false); [line 40, column 1]\n " shape="invhouse"]
	

	 "dealloc#A#[instance].cb1004dc8428c0dc_6" -> "dealloc#A#[instance].cb1004dc8428c0dc_2" ;
"init#A#[instance].08369806451ed9b1_1" [label="1: Start A.init\nFormals:  self:A*\nLocals:  \n  " color=yellow style=filled]
	

	 "init#A#[instance].08369806451ed9b1_1" -> "init#A#[instance].08369806451ed9b1_3" ;
"init#A#[instance].08369806451ed9b1_2" [label="2: Exit A.init \n  " color=yellow style=filled]
	

"init#A#[instance].08369806451ed9b1_3" [label="3:  Message Call: init \n   n$16=*&self:A* [line 86, column 3]\n  n$17=_fun_NSObject.init(n$16:A*) [line 86, column 3]\n " shape="box"]
	

	 "init#A#[instance].08369806451ed9b1_3" -> "init#A#[instance].08369806451ed9b1_2" ;
"loggerName#A#[instance].0134c8e794cdf775_1" [label="1: Start A.loggerName\nFormals:  self:A*\nLocals:  \n  " color=yellow style=filled]
	

	 "loggerName#A#[instance].0134c8e794cdf775_1" -> "loggerName#A#[instance].0134c8e794cdf775_3" ;
"loggerName#A#[instance].0134c8e794cdf775_2" [label="2: Exit A.loggerName \n  " color=yellow style=filled]
	

"loggerName#A#[instance].0134c8e794cdf775_3" [label="3:  Return Stmt \n   n$18=*&self:A* [line 90, column 29]\n  n$19=_fun_NSStringFromClass(sizeof(t=A):unsigned long) [line 90, column 10]\n " shape="box"]
	

	 "loggerName#A#[instance].0134c8e794cdf775_3" -> "loggerName#A#[instance].0134c8e794cdf775_4" ;
"loggerName#A#[instance].0134c8e794cdf775_4" [label="4:  Return Stmt \n   *&return:NSString*=n$19 [line 90, column 3]\n " shape="box"]
	

	 "loggerName#A#[instance].0134c8e794cdf775_4" -> "loggerName#A#[instance].0134c8e794cdf775_2" ;
"t#A#[instance].6db0b99001faa91a_1" [label="1: Start A.t\nFormals:  self:A*\nLocals:  b:B* \n  " color=yellow style=filled]
	

	 "t#A#[instance].6db0b99001faa91a_1" -> "t#A#[instance].6db0b99001faa91a_4" ;
"t#A#[instance].6db0b99001faa91a_2" [label="2: Exit A.t \n  " color=yellow style=filled]
	

"t#A#[instance].6db0b99001faa91a_3" [label="3:  Message Call: b_m \n   n$9=_fun_B.b_m() [line 74, column 3]\n " shape="box"]
	

	 "t#A#[instance].6db0b99001faa91a_3" -> "t#A#[instance].6db0b99001faa91a_2" ;
"t#A#[instance].6db0b99001faa91a_4" [label="4:  DeclStmt \n   VARIABLE_DECLARED(b:B*); [line 73, column 3]\n  n$10=_fun___objc_alloc_no_fail(sizeof(t=B):unsigned long) [line 73, column 10]\n  n$11=_fun_NSObject.init(n$10:B*) virtual [line 73, column 10]\n  *&b:B*=n$11 [line 73, column 3]\n " shape="box"]
	

	 "t#A#[instance].6db0b99001faa91a_4" -> "t#A#[instance].6db0b99001faa91a_3" ;
"test#A#[instance].761a478ca06d7ba2_1" [label="1: Start A.test\nFormals:  self:A*\nLocals:  \n  " color=yellow style=filled]
	

	 "test#A#[instance].761a478ca06d7ba2_1" -> "test#A#[instance].761a478ca06d7ba2_2" ;
"test#A#[instance].761a478ca06d7ba2_2" [label="2: Exit A.test \n  " color=yellow style=filled]
	

"use_class_in_other_ways:#A(class .e38f4d2ebf991f46_1" [label="1: Start A.use_class_in_other_ways:\nFormals:  self:A* object:B*\nLocals:  \n  " color=yellow style=filled]
	

	 "use_class_in_other_ways:#A(class .e38f4d2ebf991f46_1" -> "use_class_in_other_ways:#A(class .e38f4d2ebf991f46_3" ;
"use_class_in_other_ways:#A(class .e38f4d2ebf991f46_2" [label="2: Exit A.use_class_in_other_ways: \n  " color=yellow style=filled]
	

"use_class_in_other_ways:#A(class .e38f4d2ebf991f46_3" [label="3:  Return Stmt \n   n$13=*&object:B* [line 78, column 11]\n  n$12=*&self:A* [line 78, column 23]\n  n$14=_fun_B.isC:(n$13:B*,sizeof(t=A):unsigned long) virtual [line 78, column 10]\n " shape="box"]
	

	 "use_class_in_other_ways:#A(class .e38f4d2ebf991f46_3" -> "use_class_in_other_ways:#A(class .e38f4d2ebf991f46_4" ;
"use_class_in_other_ways:#A(class .e38f4d2ebf991f46_4" [label="4:  Return Stmt \n   *&return:_Bool=n$14 [line 78, column 3]\n " shape="box"]
	

	 "use_class_in_other_ways:#A(class .e38f4d2ebf991f46_4" -> "use_class_in_other_ways:#A(class .e38f4d2ebf991f46_2" ;
"b_m#B#[class].6fa10ef1df76b523_1" [label="1: Start B.b_m\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 "b_m#B#[class].6fa10ef1df76b523_1" -> "b_m#B#[class].6fa10ef1df76b523_2" ;
"b_m#B#[class].6fa10ef1df76b523_2" [label="2: Exit B.b_m \n  " color=yellow style=filled]
	

"dealloc#B#[instance].62d516b6d74de70c_1" [label="1: Start B.dealloc\nFormals:  self:B*\nLocals:  \n  " color=yellow style=filled]
	

	 "dealloc#B#[instance].62d516b6d74de70c_1" -> "dealloc#B#[instance].62d516b6d74de70c_4" ;
"dealloc#B#[instance].62d516b6d74de70c_2" [label="2: Exit B.dealloc \n  " color=yellow style=filled]
	

"dealloc#B#[instance].62d516b6d74de70c_3" [label="3:  Call dealloc \n  " shape="box"]
	

	 "dealloc#B#[instance].62d516b6d74de70c_3" -> "dealloc#B#[instance].62d516b6d74de70c_2" ;
"dealloc#B#[instance].62d516b6d74de70c_4" [label="4:  Call dealloc \n   n$0=*&self:B* [line 17, column 1]\n  n$1=_fun___objc_get_ref_count(n$0:B*) [line 17, column 1]\n  n$2=_fun___objc_set_ref_count(n$0:B*,(n$1 - 1):unsigned int) [line 17, column 1]\n  n$3=_fun___objc_get_ref_count(n$0:B*) [line 17, column 1]\n " shape="box"]
	

	 "dealloc#B#[instance].62d516b6d74de70c_4" -> "dealloc#B#[instance].62d516b6d74de70c_5" ;
	 "dealloc#B#[instance].62d516b6d74de70c_4" -> "dealloc#B#[instance].62d516b6d74de70c_6" ;
"dealloc#B#[instance].62d516b6d74de70c_5" [label="5: Prune (true branch, if (terminated)) \n   PRUNE((n$3 == 0), true); [line 17, column 1]\n " shape="invhouse"]
	

	 "dealloc#B#[instance].62d516b6d74de70c_5" -> "dealloc#B#[instance].62d516b6d74de70c_3" ;
"dealloc#B#[instance].62d516b6d74de70c_6" [label="6: Prune (false branch, if (terminated)) \n   PRUNE((n$3 != 0), false); [line 17, column 1]\n " shape="invhouse"]
	

	 "dealloc#B#[instance].62d516b6d74de70c_6" -> "dealloc#B#[instance].62d516b6d74de70c_2" ;
"isC:#B(struct objc_class)#[instan.9344200bb344f8be_1" [label="1: Start B.isC:\nFormals:  self:B* aClass:objc_class*\nLocals:  \n  " color=yellow style=filled]
	

	 "isC:#B(struct objc_class)#[instan.9344200bb344f8be_1" -> "isC:#B(struct objc_class)#[instan.9344200bb344f8be_3" ;
"isC:#B(struct objc_class)#[instan.9344200bb344f8be_2" [label="2: Exit B.isC: \n  " color=yellow style=filled]
	

"isC:#B(struct objc_class)#[instan.9344200bb344f8be_3" [label="3:  Return Stmt \n   *&return:_Bool=1 [line 23, column 3]\n " shape="box"]
	

	 "isC:#B(struct objc_class)#[instan.9344200bb344f8be_3" -> "isC:#B(struct objc_class)#[instan.9344200bb344f8be_2" ;
}
