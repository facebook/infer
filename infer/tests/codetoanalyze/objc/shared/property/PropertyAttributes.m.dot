/* @generated */
digraph iCFG {
19 [label="19:  DeclStmt \n   n$3=_fun___objc_alloc_no_fail(sizeof(class PropertyA ):unsigned long ) [line 43]\n  n$4=_fun_PropertyA_init(n$3:class PropertyA *) virtual [line 43]\n  *&a:class PropertyA *=n$4 [line 43]\n " shape="box"]
	

	 19 -> 18 ;
18 [label="18:  Message Call: setLast_name: \n   n$1=*&a:class PropertyA * [line 44]\n  n$2=*&a2:class PropertyA * [line 44]\n  _fun_PropertyA_setLast_name:(n$1:class PropertyA *,n$2:class PropertyA *) [line 44]\n " shape="box"]
	

	 18 -> 17 ;
17 [label="17:  Message Call: release \n   n$0=*&a:class PropertyA * [line 45]\n  _fun___objc_release(n$0:class PropertyA *) [line 45]\n " shape="box"]
	

	 17 -> 16 ;
16 [label="16:  Return Stmt \n   *&return:int =0 [line 46]\n " shape="box"]
	

	 16 -> 15 ;
15 [label="15: Exit test \n  " color=yellow style=filled]
	

14 [label="14: Start test\nFormals:  a2:class PropertyA *\nLocals:  a:class PropertyA * \n   DECLARE_LOCALS(&return,&a); [line 42]\n " color=yellow style=filled]
	

	 14 -> 19 ;
13 [label="13:  DeclStmt \n   n$12=_fun___objc_alloc_no_fail(sizeof(class PropertyA ):unsigned long ) [line 31]\n  n$13=_fun_PropertyA_init(n$12:class PropertyA *) virtual [line 31]\n  *&other:class PropertyA *=n$13 [line 31]\n " shape="box"]
	

	 13 -> 8 ;
	 13 -> 9 ;
12 [label="12:  BinaryOperatorStmt: Assign \n   n$9=*&other:class PropertyA * [line 33]\n  n$10=*&self:class PropertyA * [line 33]\n  n$11=*n$10._name:class PropertyA * [line 33]\n  *n$9._name:class PropertyA *=n$11 [line 33]\n " shape="box"]
	

	 12 -> 11 ;
11 [label="11:  BinaryOperatorStmt: Assign \n   n$6=*&other:class PropertyA * [line 34]\n  n$7=*&self:class PropertyA * [line 34]\n  n$8=*n$7._last_name:class PropertyA * [line 34]\n  *n$6._last_name:class PropertyA *=n$8 [line 34]\n " shape="box"]
	

	 11 -> 10 ;
10 [label="10:  BinaryOperatorStmt: Assign \n   n$3=*&other:class PropertyA * [line 35]\n  n$4=*&self:class PropertyA * [line 35]\n  n$5=*n$4._child:class PropertyA * [line 35]\n  *n$3._child:class PropertyA *=n$5 [line 35]\n " shape="box"]
	

	 10 -> 7 ;
9 [label="9: Prune (false branch) \n   n$2=*&other:class PropertyA * [line 32]\n  PRUNE((n$2 == 0), false); [line 32]\n " shape="invhouse"]
	

	 9 -> 7 ;
8 [label="8: Prune (true branch) \n   n$2=*&other:class PropertyA * [line 32]\n  PRUNE((n$2 != 0), true); [line 32]\n " shape="invhouse"]
	

	 8 -> 12 ;
7 [label="7: + \n  " ]
	

	 7 -> 6 ;
6 [label="6:  Return Stmt \n   n$1=*&other:class PropertyA * [line 37]\n  *&return:class PropertyA *=n$1 [line 37]\n " shape="box"]
	

	 6 -> 5 ;
5 [label="5: Exit PropertyA_copy \n  " color=yellow style=filled]
	

4 [label="4: Start PropertyA_copy\nFormals:  self:class PropertyA *\nLocals:  other:class PropertyA * \n   DECLARE_LOCALS(&return,&other); [line 30]\n " color=yellow style=filled]
	

	 4 -> 13 ;
3 [label="3:  Return Stmt \n   n$0=*&self:class PropertyA * [line 27]\n  *&return:struct objc_object *=n$0 [line 27]\n " shape="box"]
	

	 3 -> 2 ;
2 [label="2: Exit PropertyA_init \n  " color=yellow style=filled]
	

1 [label="1: Start PropertyA_init\nFormals:  self:class PropertyA *\nLocals:  \n   DECLARE_LOCALS(&return); [line 26]\n " color=yellow style=filled]
	

	 1 -> 3 ;
}
