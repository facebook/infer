codetoanalyze/objc/pulse-data-lineage/DataFlowToSink.m, DataFlowToSink.test_simple, 2, DATA_FLOW_TO_SINK, no_bucket, ADVICE, [in call to `DataFlowToSink.create_then_mutate`,in call to `DataFlowToSink.create_taint`,in call to `DataFlowToSink.might_be_a_source`,source of the taint here: allocation of type NSObject by alloc with kind InitSource (data flow only),return from call to `DataFlowToSink.might_be_a_source`,return from call to `DataFlowToSink.create_taint`,return from call to `DataFlowToSink.create_then_mutate`,when calling `DataFlowToSink.mutate_then_consume:` here,when calling `DataFlowToSink.consume:` here,passed as argument #1 to DataFlowToSink.__infer_taint_sink: with kind SimpleSink]
codetoanalyze/objc/pulse-data-lineage/DataFlowToSink.m, DataFlowToSink.test_simple_inheritance, 2, DATA_FLOW_TO_SINK, no_bucket, ADVICE, [source of the taint here: allocation of type NSObject by alloc with kind InitSource (data flow only),when calling `DataFlowToSink.consume:` here,passed as argument #1 to DataFlowToSink.__infer_taint_sink: with kind SimpleSink]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.create_then_mutate, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `SensitiveDataFlow.create_taint`,source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,return from call to `SensitiveDataFlow.create_taint`,passed as argument #1 to SensitiveDataFlow.mutate: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `SensitiveDataFlow.create_then_mutate`,in call to `SensitiveDataFlow.create_taint`,source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,return from call to `SensitiveDataFlow.create_taint`,return from call to `SensitiveDataFlow.create_then_mutate`,when calling `SensitiveDataFlow.mutate_then_consume:` here,passed as argument #1 to SensitiveDataFlow.consume: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `SensitiveDataFlow.create_then_mutate`,in call to `SensitiveDataFlow.create_taint`,source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,return from call to `SensitiveDataFlow.create_taint`,return from call to `SensitiveDataFlow.create_then_mutate`,when calling `SensitiveDataFlow.mutate_then_consume:` here,when calling `SensitiveDataFlow.consume:` here,passed as argument #1 to SensitiveDataFlow.might_be_a_sink: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `SensitiveDataFlow.create_then_mutate`,in call to `SensitiveDataFlow.create_taint`,source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,return from call to `SensitiveDataFlow.create_taint`,return from call to `SensitiveDataFlow.create_then_mutate`,when calling `SensitiveDataFlow.mutate_then_consume:` here,passed as argument #1 to SensitiveDataFlow.mutate: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `SensitiveDataFlow.create_then_mutate`,in call to `SensitiveDataFlow.create_taint`,source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,return from call to `SensitiveDataFlow.create_taint`,return from call to `SensitiveDataFlow.create_then_mutate`,passed as argument #1 to SensitiveDataFlow.mutate_then_consume: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test_flow_to_unknown, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,passed as argument #0 to unknown with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test_taint_propagation, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,when calling `SensitiveDataFlow.propagate_taint:` here,passed as argument #0 to unknown with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test_taint_propagation, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,passed as argument #1 to SensitiveDataFlow.propagate_taint: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test_taint_propagation, 3, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,passed as argument #1 to SensitiveDataFlow.might_be_a_sink: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test_ignored_calls, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from TaintedObject.__infer_taint_source with kind SimpleSource,passed as argument #1 to SensitiveDataFlow.might_be_a_sink: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, callSinkDirectBad, 2, DATA_FLOW_TO_SINK, no_bucket, ADVICE, [in call to `InferTaint.source`,source of the taint here: allocation of type NSObject by alloc with kind InitSource (data flow only),return from call to `InferTaint.source`,passed as argument #0 to InferTaint.sink: with kind SimpleSink]
codetoanalyze/objc/pulse-data-lineage/basics.m, callSinkDirectBad, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from InferTaint.source with kind SimpleSource,passed as argument #0 to InferTaint.sink: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, callSinkOnNonSourceBad, 2, DATA_FLOW_TO_SINK, no_bucket, ADVICE, [source of the taint here: allocation of type NSObject by alloc with kind InitSource (data flow only),passed as argument #0 to InferTaint.sink: with kind SimpleSink]
codetoanalyze/objc/pulse-data-lineage/basics.m, callNonSinkOnSourceBad, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from InferTaint.source with kind SimpleSource,passed as argument #0 to InferTaint.notASink: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, taintSourceParameterBad, 0, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: passed as argument #0 to taintSourceParameterBad with kind SimpleSource,passed as argument #0 to InferTaint.sink: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, objc_blocktaintSourceParameterBlockBad_1, 1, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: passed as argument #0 to objc_blocktaintSourceParameterBlockBad_1 with kind SimpleSource,passed as argument #0 to InferTaint.sink: with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, Helper._isPositive, 1, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from Session.getSource with kind SimpleSource,passed as argument #0 to NSArray.count with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, Helper._isPositive, 1, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from Session.getSource with kind SimpleSource,passed as argument #0 to NSArray.count with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, Helper._isPositive, 1, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from Session.getSource with kind SimpleSource,passed as argument #0 to Session.getSource with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, Helper.taints_unrelated_field_ok_FP, 1, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `Helper._isPositive`,source of the taint here: value returned from Session.getSource with kind SimpleSource,return from call to `Helper._isPositive`,passed as argument #0 to Helper._isPositive with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, Helper.taints_unrelated_field_ok_FP, 1, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `Helper._isPositive`,source of the taint here: value returned from Session.getSource with kind SimpleSource,return from call to `Helper._isPositive`,when calling `Helper._isPositive` here,passed as argument #0 to NSArray.count with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, Helper.taints_unrelated_field_ok_FP, 1, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `Helper._isPositive`,source of the taint here: value returned from Session.getSource with kind SimpleSource,return from call to `Helper._isPositive`,when calling `Helper._isPositive` here,passed as argument #0 to Session.getSource with kind SensitiveSink (data flow only)]
codetoanalyze/objc/pulse-data-lineage/basics.m, Helper.taints_unrelated_field_ok_FP, 7, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `Helper._isPositive`,source of the taint here: value returned from Session.getSource with kind SimpleSource,return from call to `Helper._isPositive`,passed as argument #0 to Helper.b2 with kind SensitiveSink (data flow only)]
