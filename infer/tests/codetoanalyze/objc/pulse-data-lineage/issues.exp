codetoanalyze/objc/pulse-data-lineage/DataFlowToSink.m, DataFlowToSink.test_simple, 2, DATA_FLOW_TO_SINK, no_bucket, ADVICE, [when calling `DataFlowToSink.create_then_mutate` here,when calling `DataFlowToSink.create_taint` here,when calling `DataFlowToSink.might_be_a_source` here,allocated here,when calling `DataFlowToSink.mutate_then_consume:` here,when calling `DataFlowToSink.consume:` here,passed as argument #1 to DataFlowToSink.__infer_taint_sink: with kind SimpleSink]
codetoanalyze/objc/pulse-data-lineage/DataFlowToSink.m, DataFlowToSink.test_through_sanitizer, 3, DATA_FLOW_TO_SINK, no_bucket, ADVICE, [when calling `DataFlowToSink.create_then_mutate` here,when calling `DataFlowToSink.create_taint` here,when calling `DataFlowToSink.might_be_a_source` here,allocated here,when calling `DataFlowToSink.mutate_then_consume:` here,when calling `DataFlowToSink.consume:` here,passed as argument #1 to DataFlowToSink.__infer_taint_sink: with kind SimpleSink,But potentially sanitized:,when calling `DataFlowToSink.sanitize:` here,passed as argument #1 to DataFlowToSink.__infer_taint_sanitizer: with kind SimpleSanitizer]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.create_then_mutate, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `SensitiveDataFlow.create_taint`,source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,return from call to `SensitiveDataFlow.create_taint`,passed as argument #1 to SensitiveDataFlow.mutate:]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `SensitiveDataFlow.create_then_mutate`,in call to `SensitiveDataFlow.create_taint`,source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,return from call to `SensitiveDataFlow.create_taint`,return from call to `SensitiveDataFlow.create_then_mutate`,when calling `SensitiveDataFlow.mutate_then_consume:` here,passed as argument #1 to SensitiveDataFlow.consume:]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `SensitiveDataFlow.create_then_mutate`,in call to `SensitiveDataFlow.create_taint`,source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,return from call to `SensitiveDataFlow.create_taint`,return from call to `SensitiveDataFlow.create_then_mutate`,when calling `SensitiveDataFlow.mutate_then_consume:` here,when calling `SensitiveDataFlow.consume:` here,passed as argument #1 to SensitiveDataFlow.might_be_a_sink:]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `SensitiveDataFlow.create_then_mutate`,in call to `SensitiveDataFlow.create_taint`,source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,return from call to `SensitiveDataFlow.create_taint`,return from call to `SensitiveDataFlow.create_then_mutate`,when calling `SensitiveDataFlow.mutate_then_consume:` here,passed as argument #1 to SensitiveDataFlow.mutate:]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [in call to `SensitiveDataFlow.create_then_mutate`,in call to `SensitiveDataFlow.create_taint`,source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,return from call to `SensitiveDataFlow.create_taint`,return from call to `SensitiveDataFlow.create_then_mutate`,passed as argument #1 to SensitiveDataFlow.mutate_then_consume:]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test_unknown, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,passed as argument #1 to SensitiveDataFlow.propagate_taint:]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test_unknown, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,when calling `SensitiveDataFlow.propagate_taint:` here,passed as argument #0 to unknown]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test_unknown, 3, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from SensitiveDataFlow.__infer_taint_source with kind SimpleSource,passed as argument #1 to SensitiveDataFlow.might_be_a_sink:]
codetoanalyze/objc/pulse-data-lineage/SensitiveDataFlow.m, SensitiveDataFlow.test_ignored_calls, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from TaintedObject.__infer_taint_source with kind SimpleSource,passed as argument #1 to SensitiveDataFlow.might_be_a_sink:]
codetoanalyze/objc/pulse-data-lineage/basics.m, callSinkDirectBad, 2, DATA_FLOW_TO_SINK, no_bucket, ADVICE, [when calling `InferTaint.source` here,allocated here,passed as argument #0 to InferTaint.sink: with kind SimpleSink]
codetoanalyze/objc/pulse-data-lineage/basics.m, callSinkDirectBad, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from InferTaint.source with kind SimpleSource,passed as argument #0 to InferTaint.sink:]
codetoanalyze/objc/pulse-data-lineage/basics.m, callSinkOnNonSourceBad, 2, DATA_FLOW_TO_SINK, no_bucket, ADVICE, [allocated here,passed as argument #0 to InferTaint.sink: with kind SimpleSink]
codetoanalyze/objc/pulse-data-lineage/basics.m, callNonSinkOnSourceBad, 2, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: value returned from InferTaint.source with kind SimpleSource,passed as argument #0 to InferTaint.notASink:]
codetoanalyze/objc/pulse-data-lineage/basics.m, taintSourceParameterBad, 0, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: passed as argument #0 to taintSourceParameterBad with kind SimpleSource,passed as argument #0 to InferTaint.sink:]
codetoanalyze/objc/pulse-data-lineage/basics.m, objc_blocktaintSourceParameterBlockBad_1, 1, SENSITIVE_DATA_FLOW, no_bucket, ADVICE, [source of the taint here: passed as argument #0 to objc_blocktaintSourceParameterBlockBad_1 with kind SimpleSource,passed as argument #0 to InferTaint.sink:]
